{
  "name": "artblocks-subgraph",
  "license": "LGPL-3.0-only",
  "scripts": {
    "build": "yarn codegen:generic && graph build",
    "test": "yarn codegen:generic && graph test -r",
    "test:e2e": "cd tests/e2e && GRAPH_NODE_BASE_IMAGE=graphprotocol/graph-node:latest docker compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from runner",
    "test:e2e:m1": "cd tests/e2e && GRAPH_NODE_BASE_IMAGE=graph-node:latest docker compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from runner",
    "test:e2e:ci": "cd tests/e2e && GRAPH_NODE_BASE_IMAGE=graphprotocol/graph-node:latest docker compose -f docker-compose.yml -f docker-compose.ci.yml up --exit-code-from runner",
    "run:local": "cd tests/e2e && GRAPH_NODE_BASE_IMAGE=graph-node:latest docker compose -f docker-compose.yml -f docker-compose.local.yml up",
    "coverage": "graph test -- -c",
    "deploy:studio": "yarn prepare:mainnet && graph deploy --studio art-blocks",
    "deploy:studio-base": "yarn prepare:base && graph deploy --studio art-blocks-base",
    "deploy:studio-sepolia-dev": "yarn prepare:sepolia-dev && graph deploy --studio art-blocks-dev-sepolia",
    "deploy:studio-sepolia-staging": "yarn prepare:sepolia-staging && graph deploy --studio art-blocks-staging-sepolia",
    "deploy:studio-arbitrum-one": "yarn prepare:arbitrum-one && graph deploy --studio art-blocks-arbitrum",
    "deploy:goldsky-sepolia-dev": "sh -c 'read -p \"Enter subgraph version: \" version; if [ -z \"$version\" ]; then echo \"Version is required\" >&2; exit 1; fi; yarn prepare:sepolia-dev && graph build && set -a && source .env && set +a && goldsky login --token \"$GOLDSKY_API_KEY\" && goldsky subgraph deploy artblocks-sepolia-dev/\"$version\"'",
    "deploy:goldsky-sepolia-staging": "sh -c 'read -p \"Enter subgraph version: \" version; if [ -z \"$version\" ]; then echo \"Version is required\" >&2; exit 1; fi; yarn prepare:sepolia-staging && graph build && set -a && source .env && set +a && goldsky login --token \"$GOLDSKY_API_KEY\" && goldsky subgraph deploy artblocks-sepolia-staging/\"$version\"'",
    "tag-latest:goldsky-sepolia-dev": "sh -c 'read -p \"Enter dev subgraph version you want to tag as latest: \" version; if [ -z \"$version\" ]; then echo \"Version is required\" >&2; exit 1; fi; source .env && set +a && goldsky login --token \"$GOLDSKY_API_KEY\" && goldsky subgraph tag create artblocks-sepolia-dev/\"$version\" --tag latest'",
    "tag-latest:goldsky-sepolia-staging": "sh -c 'read -p \"Enter staging subgraph version you want to tag as latest: \" version; if [ -z \"$version\" ]; then echo \"Version is required\" >&2; exit 1; fi; source .env && set +a && goldsky login --token \"$GOLDSKY_API_KEY\" && goldsky subgraph tag create artblocks-sepolia-staging/\"$version\" --tag latest'",
    "create:local": "graph create --node http://localhost:8020/ artblocks/art-blocks",
    "remove:local": "graph remove --node http://localhost:8020/ artblocks/art-blocks",
    "deploy:local": "graph deploy --node http://localhost:8020/ --ipfs http://localhost:5001 artblocks/art-blocks",
    "prepare:mainnet": "yarn codegen:generic && mustache config/mainnet.json subgraph.template.yaml > subgraph.yaml",
    "prepare:sepolia-staging": "yarn codegen:generic && mustache config/sepolia-staging.json subgraph.template.yaml > subgraph.yaml",
    "prepare:sepolia-dev": "yarn codegen:generic && mustache config/sepolia-dev.json subgraph.template.yaml > subgraph.yaml",
    "prepare:arbitrum-sepolia-staging": "yarn codegen:generic && mustache config/arbitrum-sepolia-staging.json subgraph.template.yaml > subgraph.yaml",
    "prepare:arbitrum-one": "yarn codegen:generic && mustache config/arbitrum-one.json subgraph.template.yaml > subgraph.yaml",
    "prepare:base": "yarn codegen:generic && mustache config/base.json subgraph.template.yaml > subgraph.yaml",
    "prepare:local": "yarn codegen:generic && mustache config/local.json subgraph.template.yaml > subgraph.yaml",
    "prepare:generic": "yarn codegen:generic",
    "codegen:generic": "yarn generate:abis && mkdir -p ./generated && rm -r ./generated && mustache config/generic.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate:abis": "cd ./abis && ./_generate-abis.sh && cd ../"
  },
  "dependencies": {
    "@artblocks/contracts": "1.3.2",
    "@assemblyscript/loader": "^0.19.22",
    "@graphprotocol/graph-cli": "^0.56.0",
    "@graphprotocol/graph-ts": "^0.27.0",
    "matchstick-as": "^0.6.0"
  },
  "devDependencies": {
    "assemblyscript": "^0.19.22",
    "mustache": "^4.1.0"
  }
}
