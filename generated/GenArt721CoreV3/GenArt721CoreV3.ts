// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptedArtistAddressesAndSplits extends ethereum.Event {
  get params(): AcceptedArtistAddressesAndSplits__Params {
    return new AcceptedArtistAddressesAndSplits__Params(this);
  }
}

export class AcceptedArtistAddressesAndSplits__Params {
  _event: AcceptedArtistAddressesAndSplits;

  constructor(event: AcceptedArtistAddressesAndSplits) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get _to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinterUpdated extends ethereum.Event {
  get params(): MinterUpdated__Params {
    return new MinterUpdated__Params(this);
  }
}

export class MinterUpdated__Params {
  _event: MinterUpdated;

  constructor(event: MinterUpdated) {
    this._event = event;
  }

  get _currentMinter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlatformUpdated extends ethereum.Event {
  get params(): PlatformUpdated__Params {
    return new PlatformUpdated__Params(this);
  }
}

export class PlatformUpdated__Params {
  _event: PlatformUpdated;

  constructor(event: PlatformUpdated) {
    this._event = event;
  }

  get _field(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ProjectUpdated extends ethereum.Event {
  get params(): ProjectUpdated__Params {
    return new ProjectUpdated__Params(this);
  }
}

export class ProjectUpdated__Params {
  _event: ProjectUpdated;

  constructor(event: ProjectUpdated) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _update(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ProposedArtistAddressesAndSplit extends ethereum.Event {
  get params(): ProposedArtistAddressesAndSplit__Params {
    return new ProposedArtistAddressesAndSplit__Params(this);
  }
}

export class ProposedArtistAddressesAndSplit__Params {
  _event: ProposedArtistAddressesAndSplit;

  constructor(event: ProposedArtistAddressesAndSplit) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _artistAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _additionalPayeePrimarySales(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _additionalPayeePrimarySalesPercentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _additionalPayeeSecondarySales(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _additionalPayeeSecondarySalesPercentage(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GenArt721CoreV3__getPrimaryRevenueSplitsResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: Address;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getArtblocksRevenue_(): BigInt {
    return this.value0;
  }

  getArtblocksAddress_(): Address {
    return this.value1;
  }

  getArtistRevenue_(): BigInt {
    return this.value2;
  }

  getArtistAddress_(): Address {
    return this.value3;
  }

  getAdditionalPayeePrimaryRevenue_(): BigInt {
    return this.value4;
  }

  getAdditionalPayeePrimaryAddress_(): Address {
    return this.value5;
  }
}

export class GenArt721CoreV3__getRoyaltiesResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getRecipients(): Array<Address> {
    return this.value0;
  }

  getBps(): Array<BigInt> {
    return this.value1;
  }
}

export class GenArt721CoreV3__getRoyaltyDataResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getArtistAddress(): Address {
    return this.value0;
  }

  getAdditionalPayee(): Address {
    return this.value1;
  }

  getAdditionalPayeePercentage(): BigInt {
    return this.value2;
  }

  getRoyaltyFeeByID(): BigInt {
    return this.value3;
  }
}

export class GenArt721CoreV3__projectArtistPaymentInfoResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getArtistAddress(): Address {
    return this.value0;
  }

  getAdditionalPayeePrimarySales(): Address {
    return this.value1;
  }

  getAdditionalPayeePrimarySalesPercentage(): BigInt {
    return this.value2;
  }

  getAdditionalPayeeSecondarySales(): Address {
    return this.value3;
  }

  getAdditionalPayeeSecondarySalesPercentage(): BigInt {
    return this.value4;
  }

  getSecondaryMarketRoyaltyPercentage(): BigInt {
    return this.value5;
  }
}

export class GenArt721CoreV3__projectDetailsResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: string;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }

  getProjectName(): string {
    return this.value0;
  }

  getArtist(): string {
    return this.value1;
  }

  getDescription(): string {
    return this.value2;
  }

  getWebsite(): string {
    return this.value3;
  }

  getLicense(): string {
    return this.value4;
  }
}

export class GenArt721CoreV3__projectScriptDetailsResult {
  value0: string;
  value1: string;
  value2: BigInt;

  constructor(value0: string, value1: string, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getScriptTypeAndVersion(): string {
    return this.value0;
  }

  getAspectRatio(): string {
    return this.value1;
  }

  getScriptCount(): BigInt {
    return this.value2;
  }
}

export class GenArt721CoreV3__projectStateDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: boolean;
  value3: boolean;
  value4: BigInt;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: boolean,
    value3: boolean,
    value4: BigInt,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getInvocations(): BigInt {
    return this.value0;
  }

  getMaxInvocations(): BigInt {
    return this.value1;
  }

  getActive(): boolean {
    return this.value2;
  }

  getPaused(): boolean {
    return this.value3;
  }

  getCompletedTimestamp(): BigInt {
    return this.value4;
  }

  getLocked(): boolean {
    return this.value5;
  }
}

export class GenArt721CoreV3 extends ethereum.SmartContract {
  static bind(address: Address): GenArt721CoreV3 {
    return new GenArt721CoreV3("GenArt721CoreV3", address);
  }

  ART_BLOCKS_ERC721TOKEN_ADDRESS_V0(): Address {
    let result = super.call(
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V0",
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V0():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ART_BLOCKS_ERC721TOKEN_ADDRESS_V0(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V0",
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V0():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ART_BLOCKS_ERC721TOKEN_ADDRESS_V1(): Address {
    let result = super.call(
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V1",
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V1():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ART_BLOCKS_ERC721TOKEN_ADDRESS_V1(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V1",
      "ART_BLOCKS_ERC721TOKEN_ADDRESS_V1():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  adminACLAllowed(
    _sender: Address,
    _contract: Address,
    _selector: Bytes
  ): boolean {
    let result = super.call(
      "adminACLAllowed",
      "adminACLAllowed(address,address,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_contract),
        ethereum.Value.fromFixedBytes(_selector)
      ]
    );

    return result[0].toBoolean();
  }

  try_adminACLAllowed(
    _sender: Address,
    _contract: Address,
    _selector: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "adminACLAllowed",
      "adminACLAllowed(address,address,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_contract),
        ethereum.Value.fromFixedBytes(_selector)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  adminACLContract(): Address {
    let result = super.call(
      "adminACLContract",
      "adminACLContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_adminACLContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "adminACLContract",
      "adminACLContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  artblocksAddress(): Address {
    let result = super.call(
      "artblocksAddress",
      "artblocksAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_artblocksAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "artblocksAddress",
      "artblocksAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  artblocksCurationRegistryAddress(): Address {
    let result = super.call(
      "artblocksCurationRegistryAddress",
      "artblocksCurationRegistryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_artblocksCurationRegistryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "artblocksCurationRegistryAddress",
      "artblocksCurationRegistryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  artblocksDependencyRegistryAddress(): Address {
    let result = super.call(
      "artblocksDependencyRegistryAddress",
      "artblocksDependencyRegistryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_artblocksDependencyRegistryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "artblocksDependencyRegistryAddress",
      "artblocksDependencyRegistryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  artblocksPercentage(): BigInt {
    let result = super.call(
      "artblocksPercentage",
      "artblocksPercentage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_artblocksPercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "artblocksPercentage",
      "artblocksPercentage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  artblocksPrimarySalesAddress(): Address {
    let result = super.call(
      "artblocksPrimarySalesAddress",
      "artblocksPrimarySalesAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_artblocksPrimarySalesAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "artblocksPrimarySalesAddress",
      "artblocksPrimarySalesAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  artblocksPrimarySalesPercentage(): BigInt {
    let result = super.call(
      "artblocksPrimarySalesPercentage",
      "artblocksPrimarySalesPercentage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_artblocksPrimarySalesPercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "artblocksPrimarySalesPercentage",
      "artblocksPrimarySalesPercentage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  artblocksSecondarySalesAddress(): Address {
    let result = super.call(
      "artblocksSecondarySalesAddress",
      "artblocksSecondarySalesAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_artblocksSecondarySalesAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "artblocksSecondarySalesAddress",
      "artblocksSecondarySalesAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  artblocksSecondarySalesBPS(): BigInt {
    let result = super.call(
      "artblocksSecondarySalesBPS",
      "artblocksSecondarySalesBPS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_artblocksSecondarySalesBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "artblocksSecondarySalesBPS",
      "artblocksSecondarySalesBPS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  coreType(): string {
    let result = super.call("coreType", "coreType():(string)", []);

    return result[0].toString();
  }

  try_coreType(): ethereum.CallResult<string> {
    let result = super.tryCall("coreType", "coreType():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  coreVersion(): string {
    let result = super.call("coreVersion", "coreVersion():(string)", []);

    return result[0].toString();
  }

  try_coreVersion(): ethereum.CallResult<string> {
    let result = super.tryCall("coreVersion", "coreVersion():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  defaultBaseURI(): string {
    let result = super.call("defaultBaseURI", "defaultBaseURI():(string)", []);

    return result[0].toString();
  }

  try_defaultBaseURI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "defaultBaseURI",
      "defaultBaseURI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getHistoricalRandomizerAt(_index: BigInt): Address {
    let result = super.call(
      "getHistoricalRandomizerAt",
      "getHistoricalRandomizerAt(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return result[0].toAddress();
  }

  try_getHistoricalRandomizerAt(_index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getHistoricalRandomizerAt",
      "getHistoricalRandomizerAt(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPrimaryRevenueSplits(
    _projectId: BigInt,
    _price: BigInt
  ): GenArt721CoreV3__getPrimaryRevenueSplitsResult {
    let result = super.call(
      "getPrimaryRevenueSplits",
      "getPrimaryRevenueSplits(uint256,uint256):(uint256,address,uint256,address,uint256,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );

    return new GenArt721CoreV3__getPrimaryRevenueSplitsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toAddress()
    );
  }

  try_getPrimaryRevenueSplits(
    _projectId: BigInt,
    _price: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__getPrimaryRevenueSplitsResult> {
    let result = super.tryCall(
      "getPrimaryRevenueSplits",
      "getPrimaryRevenueSplits(uint256,uint256):(uint256,address,uint256,address,uint256,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__getPrimaryRevenueSplitsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toAddress()
      )
    );
  }

  getRoyalties(_tokenId: BigInt): GenArt721CoreV3__getRoyaltiesResult {
    let result = super.call(
      "getRoyalties",
      "getRoyalties(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new GenArt721CoreV3__getRoyaltiesResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_getRoyalties(
    _tokenId: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__getRoyaltiesResult> {
    let result = super.tryCall(
      "getRoyalties",
      "getRoyalties(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__getRoyaltiesResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  getRoyaltyData(_tokenId: BigInt): GenArt721CoreV3__getRoyaltyDataResult {
    let result = super.call(
      "getRoyaltyData",
      "getRoyaltyData(uint256):(address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new GenArt721CoreV3__getRoyaltyDataResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getRoyaltyData(
    _tokenId: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__getRoyaltyDataResult> {
    let result = super.tryCall(
      "getRoyaltyData",
      "getRoyaltyData(uint256):(address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__getRoyaltyDataResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMintWhitelisted(_minter: Address): boolean {
    let result = super.call(
      "isMintWhitelisted",
      "isMintWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(_minter)]
    );

    return result[0].toBoolean();
  }

  try_isMintWhitelisted(_minter: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMintWhitelisted",
      "isMintWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(_minter)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mint_Ecf(_to: Address, _projectId: BigInt, _by: Address): BigInt {
    let result = super.call(
      "mint_Ecf",
      "mint_Ecf(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromAddress(_by)
      ]
    );

    return result[0].toBigInt();
  }

  try_mint_Ecf(
    _to: Address,
    _projectId: BigInt,
    _by: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mint_Ecf",
      "mint_Ecf(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromAddress(_by)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minterContract(): Address {
    let result = super.call("minterContract", "minterContract():(address)", []);

    return result[0].toAddress();
  }

  try_minterContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "minterContract",
      "minterContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  newProjectsForbidden(): boolean {
    let result = super.call(
      "newProjectsForbidden",
      "newProjectsForbidden():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_newProjectsForbidden(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "newProjectsForbidden",
      "newProjectsForbidden():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nextProjectId(): BigInt {
    let result = super.call("nextProjectId", "nextProjectId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextProjectId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextProjectId",
      "nextProjectId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numHistoricalRandomizers(): BigInt {
    let result = super.call(
      "numHistoricalRandomizers",
      "numHistoricalRandomizers():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numHistoricalRandomizers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numHistoricalRandomizers",
      "numHistoricalRandomizers():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectArtistPaymentInfo(
    _projectId: BigInt
  ): GenArt721CoreV3__projectArtistPaymentInfoResult {
    let result = super.call(
      "projectArtistPaymentInfo",
      "projectArtistPaymentInfo(uint256):(address,address,uint256,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721CoreV3__projectArtistPaymentInfoResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_projectArtistPaymentInfo(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__projectArtistPaymentInfoResult> {
    let result = super.tryCall(
      "projectArtistPaymentInfo",
      "projectArtistPaymentInfo(uint256):(address,address,uint256,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__projectArtistPaymentInfoResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  projectDetails(_projectId: BigInt): GenArt721CoreV3__projectDetailsResult {
    let result = super.call(
      "projectDetails",
      "projectDetails(uint256):(string,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721CoreV3__projectDetailsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString()
    );
  }

  try_projectDetails(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__projectDetailsResult> {
    let result = super.tryCall(
      "projectDetails",
      "projectDetails(uint256):(string,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__projectDetailsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString()
      )
    );
  }

  projectIdToAdditionalPayeePrimarySales(_projectId: BigInt): Address {
    let result = super.call(
      "projectIdToAdditionalPayeePrimarySales",
      "projectIdToAdditionalPayeePrimarySales(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toAddress();
  }

  try_projectIdToAdditionalPayeePrimarySales(
    _projectId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectIdToAdditionalPayeePrimarySales",
      "projectIdToAdditionalPayeePrimarySales(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectIdToAdditionalPayeePrimarySalesPercentage(_projectId: BigInt): BigInt {
    let result = super.call(
      "projectIdToAdditionalPayeePrimarySalesPercentage",
      "projectIdToAdditionalPayeePrimarySalesPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_projectIdToAdditionalPayeePrimarySalesPercentage(
    _projectId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdToAdditionalPayeePrimarySalesPercentage",
      "projectIdToAdditionalPayeePrimarySalesPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectIdToAdditionalPayeeSecondarySales(_projectId: BigInt): Address {
    let result = super.call(
      "projectIdToAdditionalPayeeSecondarySales",
      "projectIdToAdditionalPayeeSecondarySales(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toAddress();
  }

  try_projectIdToAdditionalPayeeSecondarySales(
    _projectId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectIdToAdditionalPayeeSecondarySales",
      "projectIdToAdditionalPayeeSecondarySales(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectIdToAdditionalPayeeSecondarySalesPercentage(
    _projectId: BigInt
  ): BigInt {
    let result = super.call(
      "projectIdToAdditionalPayeeSecondarySalesPercentage",
      "projectIdToAdditionalPayeeSecondarySalesPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_projectIdToAdditionalPayeeSecondarySalesPercentage(
    _projectId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdToAdditionalPayeeSecondarySalesPercentage",
      "projectIdToAdditionalPayeeSecondarySalesPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectIdToArtistAddress(_projectId: BigInt): Address {
    let result = super.call(
      "projectIdToArtistAddress",
      "projectIdToArtistAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toAddress();
  }

  try_projectIdToArtistAddress(
    _projectId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectIdToArtistAddress",
      "projectIdToArtistAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectIdToSecondaryMarketRoyaltyPercentage(_projectId: BigInt): BigInt {
    let result = super.call(
      "projectIdToSecondaryMarketRoyaltyPercentage",
      "projectIdToSecondaryMarketRoyaltyPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_projectIdToSecondaryMarketRoyaltyPercentage(
    _projectId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdToSecondaryMarketRoyaltyPercentage",
      "projectIdToSecondaryMarketRoyaltyPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectScriptByIndex(_projectId: BigInt, _index: BigInt): string {
    let result = super.call(
      "projectScriptByIndex",
      "projectScriptByIndex(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toString();
  }

  try_projectScriptByIndex(
    _projectId: BigInt,
    _index: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "projectScriptByIndex",
      "projectScriptByIndex(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  projectScriptDetails(
    _projectId: BigInt
  ): GenArt721CoreV3__projectScriptDetailsResult {
    let result = super.call(
      "projectScriptDetails",
      "projectScriptDetails(uint256):(string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721CoreV3__projectScriptDetailsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt()
    );
  }

  try_projectScriptDetails(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__projectScriptDetailsResult> {
    let result = super.tryCall(
      "projectScriptDetails",
      "projectScriptDetails(uint256):(string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__projectScriptDetailsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt()
      )
    );
  }

  projectStateData(
    _projectId: BigInt
  ): GenArt721CoreV3__projectStateDataResult {
    let result = super.call(
      "projectStateData",
      "projectStateData(uint256):(uint256,uint256,bool,bool,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721CoreV3__projectStateDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBoolean()
    );
  }

  try_projectStateData(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721CoreV3__projectStateDataResult> {
    let result = super.tryCall(
      "projectStateData",
      "projectStateData(uint256):(uint256,uint256,bool,bool,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721CoreV3__projectStateDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBoolean()
      )
    );
  }

  projectURIInfo(_projectId: BigInt): string {
    let result = super.call(
      "projectURIInfo",
      "projectURIInfo(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toString();
  }

  try_projectURIInfo(_projectId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "projectURIInfo",
      "projectURIInfo(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  proposedArtistAddressesAndSplitsHash(param0: BigInt): Bytes {
    let result = super.call(
      "proposedArtistAddressesAndSplitsHash",
      "proposedArtistAddressesAndSplitsHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_proposedArtistAddressesAndSplitsHash(
    param0: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proposedArtistAddressesAndSplitsHash",
      "proposedArtistAddressesAndSplitsHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  randomizerContract(): Address {
    let result = super.call(
      "randomizerContract",
      "randomizerContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_randomizerContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "randomizerContract",
      "randomizerContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  startingProjectId(): BigInt {
    let result = super.call(
      "startingProjectId",
      "startingProjectId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_startingProjectId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startingProjectId",
      "startingProjectId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenIdToHash(_tokenId: BigInt): Bytes {
    let result = super.call(
      "tokenIdToHash",
      "tokenIdToHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBytes();
  }

  try_tokenIdToHash(_tokenId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "tokenIdToHash",
      "tokenIdToHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  tokenIdToProjectId(_tokenId: BigInt): BigInt {
    let result = super.call(
      "tokenIdToProjectId",
      "tokenIdToProjectId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_tokenIdToProjectId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenIdToProjectId",
      "tokenIdToProjectId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tokenName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _tokenSymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _randomizerContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _adminACLContract(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _startingProjectId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddProjectCall extends ethereum.Call {
  get inputs(): AddProjectCall__Inputs {
    return new AddProjectCall__Inputs(this);
  }

  get outputs(): AddProjectCall__Outputs {
    return new AddProjectCall__Outputs(this);
  }
}

export class AddProjectCall__Inputs {
  _call: AddProjectCall;

  constructor(call: AddProjectCall) {
    this._call = call;
  }

  get _projectName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _artistAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddProjectCall__Outputs {
  _call: AddProjectCall;

  constructor(call: AddProjectCall) {
    this._call = call;
  }
}

export class AddProjectScriptCall extends ethereum.Call {
  get inputs(): AddProjectScriptCall__Inputs {
    return new AddProjectScriptCall__Inputs(this);
  }

  get outputs(): AddProjectScriptCall__Outputs {
    return new AddProjectScriptCall__Outputs(this);
  }
}

export class AddProjectScriptCall__Inputs {
  _call: AddProjectScriptCall;

  constructor(call: AddProjectScriptCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _script(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddProjectScriptCall__Outputs {
  _call: AddProjectScriptCall;

  constructor(call: AddProjectScriptCall) {
    this._call = call;
  }
}

export class AdminACLAllowedCall extends ethereum.Call {
  get inputs(): AdminACLAllowedCall__Inputs {
    return new AdminACLAllowedCall__Inputs(this);
  }

  get outputs(): AdminACLAllowedCall__Outputs {
    return new AdminACLAllowedCall__Outputs(this);
  }
}

export class AdminACLAllowedCall__Inputs {
  _call: AdminACLAllowedCall;

  constructor(call: AdminACLAllowedCall) {
    this._call = call;
  }

  get _sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _contract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _selector(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class AdminACLAllowedCall__Outputs {
  _call: AdminACLAllowedCall;

  constructor(call: AdminACLAllowedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class AdminAcceptArtistAddressesAndSplitsCall extends ethereum.Call {
  get inputs(): AdminAcceptArtistAddressesAndSplitsCall__Inputs {
    return new AdminAcceptArtistAddressesAndSplitsCall__Inputs(this);
  }

  get outputs(): AdminAcceptArtistAddressesAndSplitsCall__Outputs {
    return new AdminAcceptArtistAddressesAndSplitsCall__Outputs(this);
  }
}

export class AdminAcceptArtistAddressesAndSplitsCall__Inputs {
  _call: AdminAcceptArtistAddressesAndSplitsCall;

  constructor(call: AdminAcceptArtistAddressesAndSplitsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _artistAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _additionalPayeePrimarySales(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _additionalPayeePrimarySalesPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _additionalPayeeSecondarySales(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _additionalPayeeSecondarySalesPercentage(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class AdminAcceptArtistAddressesAndSplitsCall__Outputs {
  _call: AdminAcceptArtistAddressesAndSplitsCall;

  constructor(call: AdminAcceptArtistAddressesAndSplitsCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class ForbidNewProjectsCall extends ethereum.Call {
  get inputs(): ForbidNewProjectsCall__Inputs {
    return new ForbidNewProjectsCall__Inputs(this);
  }

  get outputs(): ForbidNewProjectsCall__Outputs {
    return new ForbidNewProjectsCall__Outputs(this);
  }
}

export class ForbidNewProjectsCall__Inputs {
  _call: ForbidNewProjectsCall;

  constructor(call: ForbidNewProjectsCall) {
    this._call = call;
  }
}

export class ForbidNewProjectsCall__Outputs {
  _call: ForbidNewProjectsCall;

  constructor(call: ForbidNewProjectsCall) {
    this._call = call;
  }
}

export class Mint_EcfCall extends ethereum.Call {
  get inputs(): Mint_EcfCall__Inputs {
    return new Mint_EcfCall__Inputs(this);
  }

  get outputs(): Mint_EcfCall__Outputs {
    return new Mint_EcfCall__Outputs(this);
  }
}

export class Mint_EcfCall__Inputs {
  _call: Mint_EcfCall;

  constructor(call: Mint_EcfCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _projectId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _by(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Mint_EcfCall__Outputs {
  _call: Mint_EcfCall;

  constructor(call: Mint_EcfCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProposeArtistPaymentAddressesAndSplitsCall extends ethereum.Call {
  get inputs(): ProposeArtistPaymentAddressesAndSplitsCall__Inputs {
    return new ProposeArtistPaymentAddressesAndSplitsCall__Inputs(this);
  }

  get outputs(): ProposeArtistPaymentAddressesAndSplitsCall__Outputs {
    return new ProposeArtistPaymentAddressesAndSplitsCall__Outputs(this);
  }
}

export class ProposeArtistPaymentAddressesAndSplitsCall__Inputs {
  _call: ProposeArtistPaymentAddressesAndSplitsCall;

  constructor(call: ProposeArtistPaymentAddressesAndSplitsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _artistAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _additionalPayeePrimarySales(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _additionalPayeePrimarySalesPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _additionalPayeeSecondarySales(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _additionalPayeeSecondarySalesPercentage(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ProposeArtistPaymentAddressesAndSplitsCall__Outputs {
  _call: ProposeArtistPaymentAddressesAndSplitsCall;

  constructor(call: ProposeArtistPaymentAddressesAndSplitsCall) {
    this._call = call;
  }
}

export class RemoveProjectLastScriptCall extends ethereum.Call {
  get inputs(): RemoveProjectLastScriptCall__Inputs {
    return new RemoveProjectLastScriptCall__Inputs(this);
  }

  get outputs(): RemoveProjectLastScriptCall__Outputs {
    return new RemoveProjectLastScriptCall__Outputs(this);
  }
}

export class RemoveProjectLastScriptCall__Inputs {
  _call: RemoveProjectLastScriptCall;

  constructor(call: RemoveProjectLastScriptCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveProjectLastScriptCall__Outputs {
  _call: RemoveProjectLastScriptCall;

  constructor(call: RemoveProjectLastScriptCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetTokenHash_8PTCall extends ethereum.Call {
  get inputs(): SetTokenHash_8PTCall__Inputs {
    return new SetTokenHash_8PTCall__Inputs(this);
  }

  get outputs(): SetTokenHash_8PTCall__Outputs {
    return new SetTokenHash_8PTCall__Outputs(this);
  }
}

export class SetTokenHash_8PTCall__Inputs {
  _call: SetTokenHash_8PTCall;

  constructor(call: SetTokenHash_8PTCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _hashSeed(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetTokenHash_8PTCall__Outputs {
  _call: SetTokenHash_8PTCall;

  constructor(call: SetTokenHash_8PTCall) {
    this._call = call;
  }
}

export class ToggleProjectIsActiveCall extends ethereum.Call {
  get inputs(): ToggleProjectIsActiveCall__Inputs {
    return new ToggleProjectIsActiveCall__Inputs(this);
  }

  get outputs(): ToggleProjectIsActiveCall__Outputs {
    return new ToggleProjectIsActiveCall__Outputs(this);
  }
}

export class ToggleProjectIsActiveCall__Inputs {
  _call: ToggleProjectIsActiveCall;

  constructor(call: ToggleProjectIsActiveCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleProjectIsActiveCall__Outputs {
  _call: ToggleProjectIsActiveCall;

  constructor(call: ToggleProjectIsActiveCall) {
    this._call = call;
  }
}

export class ToggleProjectIsPausedCall extends ethereum.Call {
  get inputs(): ToggleProjectIsPausedCall__Inputs {
    return new ToggleProjectIsPausedCall__Inputs(this);
  }

  get outputs(): ToggleProjectIsPausedCall__Outputs {
    return new ToggleProjectIsPausedCall__Outputs(this);
  }
}

export class ToggleProjectIsPausedCall__Inputs {
  _call: ToggleProjectIsPausedCall;

  constructor(call: ToggleProjectIsPausedCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleProjectIsPausedCall__Outputs {
  _call: ToggleProjectIsPausedCall;

  constructor(call: ToggleProjectIsPausedCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateArtblocksCurationRegistryAddressCall extends ethereum.Call {
  get inputs(): UpdateArtblocksCurationRegistryAddressCall__Inputs {
    return new UpdateArtblocksCurationRegistryAddressCall__Inputs(this);
  }

  get outputs(): UpdateArtblocksCurationRegistryAddressCall__Outputs {
    return new UpdateArtblocksCurationRegistryAddressCall__Outputs(this);
  }
}

export class UpdateArtblocksCurationRegistryAddressCall__Inputs {
  _call: UpdateArtblocksCurationRegistryAddressCall;

  constructor(call: UpdateArtblocksCurationRegistryAddressCall) {
    this._call = call;
  }

  get _artblocksCurationRegistryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateArtblocksCurationRegistryAddressCall__Outputs {
  _call: UpdateArtblocksCurationRegistryAddressCall;

  constructor(call: UpdateArtblocksCurationRegistryAddressCall) {
    this._call = call;
  }
}

export class UpdateArtblocksDependencyRegistryAddressCall extends ethereum.Call {
  get inputs(): UpdateArtblocksDependencyRegistryAddressCall__Inputs {
    return new UpdateArtblocksDependencyRegistryAddressCall__Inputs(this);
  }

  get outputs(): UpdateArtblocksDependencyRegistryAddressCall__Outputs {
    return new UpdateArtblocksDependencyRegistryAddressCall__Outputs(this);
  }
}

export class UpdateArtblocksDependencyRegistryAddressCall__Inputs {
  _call: UpdateArtblocksDependencyRegistryAddressCall;

  constructor(call: UpdateArtblocksDependencyRegistryAddressCall) {
    this._call = call;
  }

  get _artblocksDependencyRegistryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateArtblocksDependencyRegistryAddressCall__Outputs {
  _call: UpdateArtblocksDependencyRegistryAddressCall;

  constructor(call: UpdateArtblocksDependencyRegistryAddressCall) {
    this._call = call;
  }
}

export class UpdateArtblocksPrimarySalesAddressCall extends ethereum.Call {
  get inputs(): UpdateArtblocksPrimarySalesAddressCall__Inputs {
    return new UpdateArtblocksPrimarySalesAddressCall__Inputs(this);
  }

  get outputs(): UpdateArtblocksPrimarySalesAddressCall__Outputs {
    return new UpdateArtblocksPrimarySalesAddressCall__Outputs(this);
  }
}

export class UpdateArtblocksPrimarySalesAddressCall__Inputs {
  _call: UpdateArtblocksPrimarySalesAddressCall;

  constructor(call: UpdateArtblocksPrimarySalesAddressCall) {
    this._call = call;
  }

  get _artblocksPrimarySalesAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateArtblocksPrimarySalesAddressCall__Outputs {
  _call: UpdateArtblocksPrimarySalesAddressCall;

  constructor(call: UpdateArtblocksPrimarySalesAddressCall) {
    this._call = call;
  }
}

export class UpdateArtblocksPrimarySalesPercentageCall extends ethereum.Call {
  get inputs(): UpdateArtblocksPrimarySalesPercentageCall__Inputs {
    return new UpdateArtblocksPrimarySalesPercentageCall__Inputs(this);
  }

  get outputs(): UpdateArtblocksPrimarySalesPercentageCall__Outputs {
    return new UpdateArtblocksPrimarySalesPercentageCall__Outputs(this);
  }
}

export class UpdateArtblocksPrimarySalesPercentageCall__Inputs {
  _call: UpdateArtblocksPrimarySalesPercentageCall;

  constructor(call: UpdateArtblocksPrimarySalesPercentageCall) {
    this._call = call;
  }

  get artblocksPrimarySalesPercentage_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateArtblocksPrimarySalesPercentageCall__Outputs {
  _call: UpdateArtblocksPrimarySalesPercentageCall;

  constructor(call: UpdateArtblocksPrimarySalesPercentageCall) {
    this._call = call;
  }
}

export class UpdateArtblocksSecondarySalesAddressCall extends ethereum.Call {
  get inputs(): UpdateArtblocksSecondarySalesAddressCall__Inputs {
    return new UpdateArtblocksSecondarySalesAddressCall__Inputs(this);
  }

  get outputs(): UpdateArtblocksSecondarySalesAddressCall__Outputs {
    return new UpdateArtblocksSecondarySalesAddressCall__Outputs(this);
  }
}

export class UpdateArtblocksSecondarySalesAddressCall__Inputs {
  _call: UpdateArtblocksSecondarySalesAddressCall;

  constructor(call: UpdateArtblocksSecondarySalesAddressCall) {
    this._call = call;
  }

  get _artblocksSecondarySalesAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateArtblocksSecondarySalesAddressCall__Outputs {
  _call: UpdateArtblocksSecondarySalesAddressCall;

  constructor(call: UpdateArtblocksSecondarySalesAddressCall) {
    this._call = call;
  }
}

export class UpdateArtblocksSecondarySalesBPSCall extends ethereum.Call {
  get inputs(): UpdateArtblocksSecondarySalesBPSCall__Inputs {
    return new UpdateArtblocksSecondarySalesBPSCall__Inputs(this);
  }

  get outputs(): UpdateArtblocksSecondarySalesBPSCall__Outputs {
    return new UpdateArtblocksSecondarySalesBPSCall__Outputs(this);
  }
}

export class UpdateArtblocksSecondarySalesBPSCall__Inputs {
  _call: UpdateArtblocksSecondarySalesBPSCall;

  constructor(call: UpdateArtblocksSecondarySalesBPSCall) {
    this._call = call;
  }

  get _artblocksSecondarySalesBPS(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateArtblocksSecondarySalesBPSCall__Outputs {
  _call: UpdateArtblocksSecondarySalesBPSCall;

  constructor(call: UpdateArtblocksSecondarySalesBPSCall) {
    this._call = call;
  }
}

export class UpdateDefaultBaseURICall extends ethereum.Call {
  get inputs(): UpdateDefaultBaseURICall__Inputs {
    return new UpdateDefaultBaseURICall__Inputs(this);
  }

  get outputs(): UpdateDefaultBaseURICall__Outputs {
    return new UpdateDefaultBaseURICall__Outputs(this);
  }
}

export class UpdateDefaultBaseURICall__Inputs {
  _call: UpdateDefaultBaseURICall;

  constructor(call: UpdateDefaultBaseURICall) {
    this._call = call;
  }

  get _defaultBaseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateDefaultBaseURICall__Outputs {
  _call: UpdateDefaultBaseURICall;

  constructor(call: UpdateDefaultBaseURICall) {
    this._call = call;
  }
}

export class UpdateMinterContractCall extends ethereum.Call {
  get inputs(): UpdateMinterContractCall__Inputs {
    return new UpdateMinterContractCall__Inputs(this);
  }

  get outputs(): UpdateMinterContractCall__Outputs {
    return new UpdateMinterContractCall__Outputs(this);
  }
}

export class UpdateMinterContractCall__Inputs {
  _call: UpdateMinterContractCall;

  constructor(call: UpdateMinterContractCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateMinterContractCall__Outputs {
  _call: UpdateMinterContractCall;

  constructor(call: UpdateMinterContractCall) {
    this._call = call;
  }
}

export class UpdateProjectArtistAddressCall extends ethereum.Call {
  get inputs(): UpdateProjectArtistAddressCall__Inputs {
    return new UpdateProjectArtistAddressCall__Inputs(this);
  }

  get outputs(): UpdateProjectArtistAddressCall__Outputs {
    return new UpdateProjectArtistAddressCall__Outputs(this);
  }
}

export class UpdateProjectArtistAddressCall__Inputs {
  _call: UpdateProjectArtistAddressCall;

  constructor(call: UpdateProjectArtistAddressCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _artistAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateProjectArtistAddressCall__Outputs {
  _call: UpdateProjectArtistAddressCall;

  constructor(call: UpdateProjectArtistAddressCall) {
    this._call = call;
  }
}

export class UpdateProjectArtistNameCall extends ethereum.Call {
  get inputs(): UpdateProjectArtistNameCall__Inputs {
    return new UpdateProjectArtistNameCall__Inputs(this);
  }

  get outputs(): UpdateProjectArtistNameCall__Outputs {
    return new UpdateProjectArtistNameCall__Outputs(this);
  }
}

export class UpdateProjectArtistNameCall__Inputs {
  _call: UpdateProjectArtistNameCall;

  constructor(call: UpdateProjectArtistNameCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectArtistName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectArtistNameCall__Outputs {
  _call: UpdateProjectArtistNameCall;

  constructor(call: UpdateProjectArtistNameCall) {
    this._call = call;
  }
}

export class UpdateProjectAspectRatioCall extends ethereum.Call {
  get inputs(): UpdateProjectAspectRatioCall__Inputs {
    return new UpdateProjectAspectRatioCall__Inputs(this);
  }

  get outputs(): UpdateProjectAspectRatioCall__Outputs {
    return new UpdateProjectAspectRatioCall__Outputs(this);
  }
}

export class UpdateProjectAspectRatioCall__Inputs {
  _call: UpdateProjectAspectRatioCall;

  constructor(call: UpdateProjectAspectRatioCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _aspectRatio(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectAspectRatioCall__Outputs {
  _call: UpdateProjectAspectRatioCall;

  constructor(call: UpdateProjectAspectRatioCall) {
    this._call = call;
  }
}

export class UpdateProjectBaseURICall extends ethereum.Call {
  get inputs(): UpdateProjectBaseURICall__Inputs {
    return new UpdateProjectBaseURICall__Inputs(this);
  }

  get outputs(): UpdateProjectBaseURICall__Outputs {
    return new UpdateProjectBaseURICall__Outputs(this);
  }
}

export class UpdateProjectBaseURICall__Inputs {
  _call: UpdateProjectBaseURICall;

  constructor(call: UpdateProjectBaseURICall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newBaseURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectBaseURICall__Outputs {
  _call: UpdateProjectBaseURICall;

  constructor(call: UpdateProjectBaseURICall) {
    this._call = call;
  }
}

export class UpdateProjectDescriptionCall extends ethereum.Call {
  get inputs(): UpdateProjectDescriptionCall__Inputs {
    return new UpdateProjectDescriptionCall__Inputs(this);
  }

  get outputs(): UpdateProjectDescriptionCall__Outputs {
    return new UpdateProjectDescriptionCall__Outputs(this);
  }
}

export class UpdateProjectDescriptionCall__Inputs {
  _call: UpdateProjectDescriptionCall;

  constructor(call: UpdateProjectDescriptionCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectDescription(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectDescriptionCall__Outputs {
  _call: UpdateProjectDescriptionCall;

  constructor(call: UpdateProjectDescriptionCall) {
    this._call = call;
  }
}

export class UpdateProjectLicenseCall extends ethereum.Call {
  get inputs(): UpdateProjectLicenseCall__Inputs {
    return new UpdateProjectLicenseCall__Inputs(this);
  }

  get outputs(): UpdateProjectLicenseCall__Outputs {
    return new UpdateProjectLicenseCall__Outputs(this);
  }
}

export class UpdateProjectLicenseCall__Inputs {
  _call: UpdateProjectLicenseCall;

  constructor(call: UpdateProjectLicenseCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectLicense(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectLicenseCall__Outputs {
  _call: UpdateProjectLicenseCall;

  constructor(call: UpdateProjectLicenseCall) {
    this._call = call;
  }
}

export class UpdateProjectMaxInvocationsCall extends ethereum.Call {
  get inputs(): UpdateProjectMaxInvocationsCall__Inputs {
    return new UpdateProjectMaxInvocationsCall__Inputs(this);
  }

  get outputs(): UpdateProjectMaxInvocationsCall__Outputs {
    return new UpdateProjectMaxInvocationsCall__Outputs(this);
  }
}

export class UpdateProjectMaxInvocationsCall__Inputs {
  _call: UpdateProjectMaxInvocationsCall;

  constructor(call: UpdateProjectMaxInvocationsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxInvocations(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdateProjectMaxInvocationsCall__Outputs {
  _call: UpdateProjectMaxInvocationsCall;

  constructor(call: UpdateProjectMaxInvocationsCall) {
    this._call = call;
  }
}

export class UpdateProjectNameCall extends ethereum.Call {
  get inputs(): UpdateProjectNameCall__Inputs {
    return new UpdateProjectNameCall__Inputs(this);
  }

  get outputs(): UpdateProjectNameCall__Outputs {
    return new UpdateProjectNameCall__Outputs(this);
  }
}

export class UpdateProjectNameCall__Inputs {
  _call: UpdateProjectNameCall;

  constructor(call: UpdateProjectNameCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectNameCall__Outputs {
  _call: UpdateProjectNameCall;

  constructor(call: UpdateProjectNameCall) {
    this._call = call;
  }
}

export class UpdateProjectScriptCall extends ethereum.Call {
  get inputs(): UpdateProjectScriptCall__Inputs {
    return new UpdateProjectScriptCall__Inputs(this);
  }

  get outputs(): UpdateProjectScriptCall__Outputs {
    return new UpdateProjectScriptCall__Outputs(this);
  }
}

export class UpdateProjectScriptCall__Inputs {
  _call: UpdateProjectScriptCall;

  constructor(call: UpdateProjectScriptCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _scriptId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _script(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateProjectScriptCall__Outputs {
  _call: UpdateProjectScriptCall;

  constructor(call: UpdateProjectScriptCall) {
    this._call = call;
  }
}

export class UpdateProjectScriptTypeCall extends ethereum.Call {
  get inputs(): UpdateProjectScriptTypeCall__Inputs {
    return new UpdateProjectScriptTypeCall__Inputs(this);
  }

  get outputs(): UpdateProjectScriptTypeCall__Outputs {
    return new UpdateProjectScriptTypeCall__Outputs(this);
  }
}

export class UpdateProjectScriptTypeCall__Inputs {
  _call: UpdateProjectScriptTypeCall;

  constructor(call: UpdateProjectScriptTypeCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _scriptTypeAndVersion(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpdateProjectScriptTypeCall__Outputs {
  _call: UpdateProjectScriptTypeCall;

  constructor(call: UpdateProjectScriptTypeCall) {
    this._call = call;
  }
}

export class UpdateProjectSecondaryMarketRoyaltyPercentageCall extends ethereum.Call {
  get inputs(): UpdateProjectSecondaryMarketRoyaltyPercentageCall__Inputs {
    return new UpdateProjectSecondaryMarketRoyaltyPercentageCall__Inputs(this);
  }

  get outputs(): UpdateProjectSecondaryMarketRoyaltyPercentageCall__Outputs {
    return new UpdateProjectSecondaryMarketRoyaltyPercentageCall__Outputs(this);
  }
}

export class UpdateProjectSecondaryMarketRoyaltyPercentageCall__Inputs {
  _call: UpdateProjectSecondaryMarketRoyaltyPercentageCall;

  constructor(call: UpdateProjectSecondaryMarketRoyaltyPercentageCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _secondMarketRoyalty(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateProjectSecondaryMarketRoyaltyPercentageCall__Outputs {
  _call: UpdateProjectSecondaryMarketRoyaltyPercentageCall;

  constructor(call: UpdateProjectSecondaryMarketRoyaltyPercentageCall) {
    this._call = call;
  }
}

export class UpdateProjectWebsiteCall extends ethereum.Call {
  get inputs(): UpdateProjectWebsiteCall__Inputs {
    return new UpdateProjectWebsiteCall__Inputs(this);
  }

  get outputs(): UpdateProjectWebsiteCall__Outputs {
    return new UpdateProjectWebsiteCall__Outputs(this);
  }
}

export class UpdateProjectWebsiteCall__Inputs {
  _call: UpdateProjectWebsiteCall;

  constructor(call: UpdateProjectWebsiteCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectWebsite(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectWebsiteCall__Outputs {
  _call: UpdateProjectWebsiteCall;

  constructor(call: UpdateProjectWebsiteCall) {
    this._call = call;
  }
}

export class UpdateRandomizerAddressCall extends ethereum.Call {
  get inputs(): UpdateRandomizerAddressCall__Inputs {
    return new UpdateRandomizerAddressCall__Inputs(this);
  }

  get outputs(): UpdateRandomizerAddressCall__Outputs {
    return new UpdateRandomizerAddressCall__Outputs(this);
  }
}

export class UpdateRandomizerAddressCall__Inputs {
  _call: UpdateRandomizerAddressCall;

  constructor(call: UpdateRandomizerAddressCall) {
    this._call = call;
  }

  get _randomizerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateRandomizerAddressCall__Outputs {
  _call: UpdateRandomizerAddressCall;

  constructor(call: UpdateRandomizerAddressCall) {
    this._call = call;
  }
}
