// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ExternalAssetDependencyRemoved extends ethereum.Event {
  get params(): ExternalAssetDependencyRemoved__Params {
    return new ExternalAssetDependencyRemoved__Params(this);
  }
}

export class ExternalAssetDependencyRemoved__Params {
  _event: ExternalAssetDependencyRemoved;

  constructor(event: ExternalAssetDependencyRemoved) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _cid(): string {
    return this._event.parameters[2].value.toString();
  }

  get _dependencyType(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class ExternalAssetDependencyUpdated extends ethereum.Event {
  get params(): ExternalAssetDependencyUpdated__Params {
    return new ExternalAssetDependencyUpdated__Params(this);
  }
}

export class ExternalAssetDependencyUpdated__Params {
  _event: ExternalAssetDependencyUpdated;

  constructor(event: ExternalAssetDependencyUpdated) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _cid(): string {
    return this._event.parameters[2].value.toString();
  }

  get _dependencyType(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get _to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _projectId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ToggleProjectExternalAssetDependenciesLocked extends ethereum.Event {
  get params(): ToggleProjectExternalAssetDependenciesLocked__Params {
    return new ToggleProjectExternalAssetDependenciesLocked__Params(this);
  }
}

export class ToggleProjectExternalAssetDependenciesLocked__Params {
  _event: ToggleProjectExternalAssetDependenciesLocked;

  constructor(event: ToggleProjectExternalAssetDependenciesLocked) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _locked(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GenArt721Core2EngineFlex__getRoyaltyDataResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getArtistAddress(): Address {
    return this.value0;
  }

  getAdditionalPayee(): Address {
    return this.value1;
  }

  getAdditionalPayeePercentage(): BigInt {
    return this.value2;
  }

  getRoyaltyFeeByID(): BigInt {
    return this.value3;
  }
}

export class GenArt721Core2EngineFlex__projectDetailsResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: string;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }

  getProjectName(): string {
    return this.value0;
  }

  getArtist(): string {
    return this.value1;
  }

  getDescription(): string {
    return this.value2;
  }

  getWebsite(): string {
    return this.value3;
  }

  getLicense(): string {
    return this.value4;
  }
}

export class GenArt721Core2EngineFlex__projectIdToExternalAssetDependenciesResult {
  value0: string;
  value1: i32;

  constructor(value0: string, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getCid(): string {
    return this.value0;
  }

  getDependencyType(): i32 {
    return this.value1;
  }
}

export class GenArt721Core2EngineFlex__projectScriptInfoResult {
  value0: string;
  value1: BigInt;
  value2: string;
  value3: boolean;
  value4: boolean;

  constructor(
    value0: string,
    value1: BigInt,
    value2: string,
    value3: boolean,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getScriptJSON(): string {
    return this.value0;
  }

  getScriptCount(): BigInt {
    return this.value1;
  }

  getIpfsHash(): string {
    return this.value2;
  }

  getLocked(): boolean {
    return this.value3;
  }

  getPaused(): boolean {
    return this.value4;
  }
}

export class GenArt721Core2EngineFlex__projectTokenInfoResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: Address;
  value6: BigInt;
  value7: string;
  value8: Address;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: Address,
    value6: BigInt,
    value7: string,
    value8: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    return map;
  }

  getArtistAddress(): Address {
    return this.value0;
  }

  getPricePerTokenInWei(): BigInt {
    return this.value1;
  }

  getInvocations(): BigInt {
    return this.value2;
  }

  getMaxInvocations(): BigInt {
    return this.value3;
  }

  getActive(): boolean {
    return this.value4;
  }

  getAdditionalPayee(): Address {
    return this.value5;
  }

  getAdditionalPayeePercentage(): BigInt {
    return this.value6;
  }

  getCurrency(): string {
    return this.value7;
  }

  getCurrencyAddress(): Address {
    return this.value8;
  }
}

export class GenArt721Core2EngineFlex extends ethereum.SmartContract {
  static bind(address: Address): GenArt721Core2EngineFlex {
    return new GenArt721Core2EngineFlex("GenArt721Core2EngineFlex", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoyaltyData(
    _tokenId: BigInt
  ): GenArt721Core2EngineFlex__getRoyaltyDataResult {
    let result = super.call(
      "getRoyaltyData",
      "getRoyaltyData(uint256):(address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new GenArt721Core2EngineFlex__getRoyaltyDataResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getRoyaltyData(
    _tokenId: BigInt
  ): ethereum.CallResult<GenArt721Core2EngineFlex__getRoyaltyDataResult> {
    let result = super.tryCall(
      "getRoyaltyData",
      "getRoyaltyData(uint256):(address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721Core2EngineFlex__getRoyaltyDataResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  hashToTokenId(param0: Bytes): BigInt {
    let result = super.call(
      "hashToTokenId",
      "hashToTokenId(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_hashToTokenId(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashToTokenId",
      "hashToTokenId(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMintWhitelisted(param0: Address): boolean {
    let result = super.call(
      "isMintWhitelisted",
      "isMintWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_isMintWhitelisted(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMintWhitelisted",
      "isMintWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWhitelisted(param0: Address): boolean {
    let result = super.call("isWhitelisted", "isWhitelisted(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isWhitelisted(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWhitelisted",
      "isWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mint(_to: Address, _projectId: BigInt, _by: Address): BigInt {
    let result = super.call("mint", "mint(address,uint256,address):(uint256)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_projectId),
      ethereum.Value.fromAddress(_by)
    ]);

    return result[0].toBigInt();
  }

  try_mint(
    _to: Address,
    _projectId: BigInt,
    _by: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mint",
      "mint(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromAddress(_by)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nextProjectId(): BigInt {
    let result = super.call("nextProjectId", "nextProjectId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextProjectId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextProjectId",
      "nextProjectId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  preferredArweaveGateway(): string {
    let result = super.call(
      "preferredArweaveGateway",
      "preferredArweaveGateway():(string)",
      []
    );

    return result[0].toString();
  }

  try_preferredArweaveGateway(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "preferredArweaveGateway",
      "preferredArweaveGateway():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  preferredIPFSGateway(): string {
    let result = super.call(
      "preferredIPFSGateway",
      "preferredIPFSGateway():(string)",
      []
    );

    return result[0].toString();
  }

  try_preferredIPFSGateway(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "preferredIPFSGateway",
      "preferredIPFSGateway():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  projectDetails(
    _projectId: BigInt
  ): GenArt721Core2EngineFlex__projectDetailsResult {
    let result = super.call(
      "projectDetails",
      "projectDetails(uint256):(string,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721Core2EngineFlex__projectDetailsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString()
    );
  }

  try_projectDetails(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721Core2EngineFlex__projectDetailsResult> {
    let result = super.tryCall(
      "projectDetails",
      "projectDetails(uint256):(string,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721Core2EngineFlex__projectDetailsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString()
      )
    );
  }

  projectIdToAdditionalPayee(param0: BigInt): Address {
    let result = super.call(
      "projectIdToAdditionalPayee",
      "projectIdToAdditionalPayee(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_projectIdToAdditionalPayee(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectIdToAdditionalPayee",
      "projectIdToAdditionalPayee(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectIdToAdditionalPayeePercentage(param0: BigInt): BigInt {
    let result = super.call(
      "projectIdToAdditionalPayeePercentage",
      "projectIdToAdditionalPayeePercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_projectIdToAdditionalPayeePercentage(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdToAdditionalPayeePercentage",
      "projectIdToAdditionalPayeePercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectIdToArtistAddress(param0: BigInt): Address {
    let result = super.call(
      "projectIdToArtistAddress",
      "projectIdToArtistAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_projectIdToArtistAddress(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectIdToArtistAddress",
      "projectIdToArtistAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectIdToCurrencyAddress(param0: BigInt): Address {
    let result = super.call(
      "projectIdToCurrencyAddress",
      "projectIdToCurrencyAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_projectIdToCurrencyAddress(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectIdToCurrencyAddress",
      "projectIdToCurrencyAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectIdToCurrencySymbol(param0: BigInt): string {
    let result = super.call(
      "projectIdToCurrencySymbol",
      "projectIdToCurrencySymbol(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toString();
  }

  try_projectIdToCurrencySymbol(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "projectIdToCurrencySymbol",
      "projectIdToCurrencySymbol(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  projectIdToExternalAssetDependencies(
    param0: BigInt,
    param1: BigInt
  ): GenArt721Core2EngineFlex__projectIdToExternalAssetDependenciesResult {
    let result = super.call(
      "projectIdToExternalAssetDependencies",
      "projectIdToExternalAssetDependencies(uint256,uint256):(string,uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new GenArt721Core2EngineFlex__projectIdToExternalAssetDependenciesResult(
      result[0].toString(),
      result[1].toI32()
    );
  }

  try_projectIdToExternalAssetDependencies(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<
    GenArt721Core2EngineFlex__projectIdToExternalAssetDependenciesResult
  > {
    let result = super.tryCall(
      "projectIdToExternalAssetDependencies",
      "projectIdToExternalAssetDependencies(uint256,uint256):(string,uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721Core2EngineFlex__projectIdToExternalAssetDependenciesResult(
        value[0].toString(),
        value[1].toI32()
      )
    );
  }

  projectIdToPricePerTokenInWei(param0: BigInt): BigInt {
    let result = super.call(
      "projectIdToPricePerTokenInWei",
      "projectIdToPricePerTokenInWei(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_projectIdToPricePerTokenInWei(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdToPricePerTokenInWei",
      "projectIdToPricePerTokenInWei(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectIdToSecondaryMarketRoyaltyPercentage(param0: BigInt): BigInt {
    let result = super.call(
      "projectIdToSecondaryMarketRoyaltyPercentage",
      "projectIdToSecondaryMarketRoyaltyPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_projectIdToSecondaryMarketRoyaltyPercentage(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdToSecondaryMarketRoyaltyPercentage",
      "projectIdToSecondaryMarketRoyaltyPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectScriptByIndex(_projectId: BigInt, _index: BigInt): string {
    let result = super.call(
      "projectScriptByIndex",
      "projectScriptByIndex(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toString();
  }

  try_projectScriptByIndex(
    _projectId: BigInt,
    _index: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "projectScriptByIndex",
      "projectScriptByIndex(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  projectScriptInfo(
    _projectId: BigInt
  ): GenArt721Core2EngineFlex__projectScriptInfoResult {
    let result = super.call(
      "projectScriptInfo",
      "projectScriptInfo(uint256):(string,uint256,string,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721Core2EngineFlex__projectScriptInfoResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toBoolean(),
      result[4].toBoolean()
    );
  }

  try_projectScriptInfo(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721Core2EngineFlex__projectScriptInfoResult> {
    let result = super.tryCall(
      "projectScriptInfo",
      "projectScriptInfo(uint256):(string,uint256,string,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721Core2EngineFlex__projectScriptInfoResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toBoolean(),
        value[4].toBoolean()
      )
    );
  }

  projectTokenInfo(
    _projectId: BigInt
  ): GenArt721Core2EngineFlex__projectTokenInfoResult {
    let result = super.call(
      "projectTokenInfo",
      "projectTokenInfo(uint256):(address,uint256,uint256,uint256,bool,address,uint256,string,address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new GenArt721Core2EngineFlex__projectTokenInfoResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toAddress(),
      result[6].toBigInt(),
      result[7].toString(),
      result[8].toAddress()
    );
  }

  try_projectTokenInfo(
    _projectId: BigInt
  ): ethereum.CallResult<GenArt721Core2EngineFlex__projectTokenInfoResult> {
    let result = super.tryCall(
      "projectTokenInfo",
      "projectTokenInfo(uint256):(address,uint256,uint256,uint256,bool,address,uint256,string,address)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GenArt721Core2EngineFlex__projectTokenInfoResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toAddress(),
        value[6].toBigInt(),
        value[7].toString(),
        value[8].toAddress()
      )
    );
  }

  projectURIInfo(_projectId: BigInt): string {
    let result = super.call(
      "projectURIInfo",
      "projectURIInfo(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toString();
  }

  try_projectURIInfo(_projectId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "projectURIInfo",
      "projectURIInfo(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  randomizerContract(): Address {
    let result = super.call(
      "randomizerContract",
      "randomizerContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_randomizerContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "randomizerContract",
      "randomizerContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  renderProviderAddress(): Address {
    let result = super.call(
      "renderProviderAddress",
      "renderProviderAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_renderProviderAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "renderProviderAddress",
      "renderProviderAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  renderProviderPercentage(): BigInt {
    let result = super.call(
      "renderProviderPercentage",
      "renderProviderPercentage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_renderProviderPercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "renderProviderPercentage",
      "renderProviderPercentage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenIdToHash(param0: BigInt): Bytes {
    let result = super.call(
      "tokenIdToHash",
      "tokenIdToHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_tokenIdToHash(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "tokenIdToHash",
      "tokenIdToHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  tokenIdToProjectId(param0: BigInt): BigInt {
    let result = super.call(
      "tokenIdToProjectId",
      "tokenIdToProjectId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_tokenIdToProjectId(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenIdToProjectId",
      "tokenIdToProjectId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tokenName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _tokenSymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _randomizerContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMintWhitelistedCall extends ethereum.Call {
  get inputs(): AddMintWhitelistedCall__Inputs {
    return new AddMintWhitelistedCall__Inputs(this);
  }

  get outputs(): AddMintWhitelistedCall__Outputs {
    return new AddMintWhitelistedCall__Outputs(this);
  }
}

export class AddMintWhitelistedCall__Inputs {
  _call: AddMintWhitelistedCall;

  constructor(call: AddMintWhitelistedCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddMintWhitelistedCall__Outputs {
  _call: AddMintWhitelistedCall;

  constructor(call: AddMintWhitelistedCall) {
    this._call = call;
  }
}

export class AddProjectCall extends ethereum.Call {
  get inputs(): AddProjectCall__Inputs {
    return new AddProjectCall__Inputs(this);
  }

  get outputs(): AddProjectCall__Outputs {
    return new AddProjectCall__Outputs(this);
  }
}

export class AddProjectCall__Inputs {
  _call: AddProjectCall;

  constructor(call: AddProjectCall) {
    this._call = call;
  }

  get _projectName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _artistAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pricePerTokenInWei(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddProjectCall__Outputs {
  _call: AddProjectCall;

  constructor(call: AddProjectCall) {
    this._call = call;
  }
}

export class AddProjectExternalAssetDependencyCall extends ethereum.Call {
  get inputs(): AddProjectExternalAssetDependencyCall__Inputs {
    return new AddProjectExternalAssetDependencyCall__Inputs(this);
  }

  get outputs(): AddProjectExternalAssetDependencyCall__Outputs {
    return new AddProjectExternalAssetDependencyCall__Outputs(this);
  }
}

export class AddProjectExternalAssetDependencyCall__Inputs {
  _call: AddProjectExternalAssetDependencyCall;

  constructor(call: AddProjectExternalAssetDependencyCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _cid(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _dependencyType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class AddProjectExternalAssetDependencyCall__Outputs {
  _call: AddProjectExternalAssetDependencyCall;

  constructor(call: AddProjectExternalAssetDependencyCall) {
    this._call = call;
  }
}

export class AddProjectScriptCall extends ethereum.Call {
  get inputs(): AddProjectScriptCall__Inputs {
    return new AddProjectScriptCall__Inputs(this);
  }

  get outputs(): AddProjectScriptCall__Outputs {
    return new AddProjectScriptCall__Outputs(this);
  }
}

export class AddProjectScriptCall__Inputs {
  _call: AddProjectScriptCall;

  constructor(call: AddProjectScriptCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _script(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddProjectScriptCall__Outputs {
  _call: AddProjectScriptCall;

  constructor(call: AddProjectScriptCall) {
    this._call = call;
  }
}

export class AddWhitelistedCall extends ethereum.Call {
  get inputs(): AddWhitelistedCall__Inputs {
    return new AddWhitelistedCall__Inputs(this);
  }

  get outputs(): AddWhitelistedCall__Outputs {
    return new AddWhitelistedCall__Outputs(this);
  }
}

export class AddWhitelistedCall__Inputs {
  _call: AddWhitelistedCall;

  constructor(call: AddWhitelistedCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddWhitelistedCall__Outputs {
  _call: AddWhitelistedCall;

  constructor(call: AddWhitelistedCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _projectId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _by(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveMintWhitelistedCall extends ethereum.Call {
  get inputs(): RemoveMintWhitelistedCall__Inputs {
    return new RemoveMintWhitelistedCall__Inputs(this);
  }

  get outputs(): RemoveMintWhitelistedCall__Outputs {
    return new RemoveMintWhitelistedCall__Outputs(this);
  }
}

export class RemoveMintWhitelistedCall__Inputs {
  _call: RemoveMintWhitelistedCall;

  constructor(call: RemoveMintWhitelistedCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveMintWhitelistedCall__Outputs {
  _call: RemoveMintWhitelistedCall;

  constructor(call: RemoveMintWhitelistedCall) {
    this._call = call;
  }
}

export class RemoveProjectExternalAssetDependencyCall extends ethereum.Call {
  get inputs(): RemoveProjectExternalAssetDependencyCall__Inputs {
    return new RemoveProjectExternalAssetDependencyCall__Inputs(this);
  }

  get outputs(): RemoveProjectExternalAssetDependencyCall__Outputs {
    return new RemoveProjectExternalAssetDependencyCall__Outputs(this);
  }
}

export class RemoveProjectExternalAssetDependencyCall__Inputs {
  _call: RemoveProjectExternalAssetDependencyCall;

  constructor(call: RemoveProjectExternalAssetDependencyCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveProjectExternalAssetDependencyCall__Outputs {
  _call: RemoveProjectExternalAssetDependencyCall;

  constructor(call: RemoveProjectExternalAssetDependencyCall) {
    this._call = call;
  }
}

export class RemoveProjectLastScriptCall extends ethereum.Call {
  get inputs(): RemoveProjectLastScriptCall__Inputs {
    return new RemoveProjectLastScriptCall__Inputs(this);
  }

  get outputs(): RemoveProjectLastScriptCall__Outputs {
    return new RemoveProjectLastScriptCall__Outputs(this);
  }
}

export class RemoveProjectLastScriptCall__Inputs {
  _call: RemoveProjectLastScriptCall;

  constructor(call: RemoveProjectLastScriptCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveProjectLastScriptCall__Outputs {
  _call: RemoveProjectLastScriptCall;

  constructor(call: RemoveProjectLastScriptCall) {
    this._call = call;
  }
}

export class RemoveWhitelistedCall extends ethereum.Call {
  get inputs(): RemoveWhitelistedCall__Inputs {
    return new RemoveWhitelistedCall__Inputs(this);
  }

  get outputs(): RemoveWhitelistedCall__Outputs {
    return new RemoveWhitelistedCall__Outputs(this);
  }
}

export class RemoveWhitelistedCall__Inputs {
  _call: RemoveWhitelistedCall;

  constructor(call: RemoveWhitelistedCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveWhitelistedCall__Outputs {
  _call: RemoveWhitelistedCall;

  constructor(call: RemoveWhitelistedCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class ToggleProjectExternalAssetDependenciesAreLockedCall extends ethereum.Call {
  get inputs(): ToggleProjectExternalAssetDependenciesAreLockedCall__Inputs {
    return new ToggleProjectExternalAssetDependenciesAreLockedCall__Inputs(
      this
    );
  }

  get outputs(): ToggleProjectExternalAssetDependenciesAreLockedCall__Outputs {
    return new ToggleProjectExternalAssetDependenciesAreLockedCall__Outputs(
      this
    );
  }
}

export class ToggleProjectExternalAssetDependenciesAreLockedCall__Inputs {
  _call: ToggleProjectExternalAssetDependenciesAreLockedCall;

  constructor(call: ToggleProjectExternalAssetDependenciesAreLockedCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleProjectExternalAssetDependenciesAreLockedCall__Outputs {
  _call: ToggleProjectExternalAssetDependenciesAreLockedCall;

  constructor(call: ToggleProjectExternalAssetDependenciesAreLockedCall) {
    this._call = call;
  }
}

export class ToggleProjectIsActiveCall extends ethereum.Call {
  get inputs(): ToggleProjectIsActiveCall__Inputs {
    return new ToggleProjectIsActiveCall__Inputs(this);
  }

  get outputs(): ToggleProjectIsActiveCall__Outputs {
    return new ToggleProjectIsActiveCall__Outputs(this);
  }
}

export class ToggleProjectIsActiveCall__Inputs {
  _call: ToggleProjectIsActiveCall;

  constructor(call: ToggleProjectIsActiveCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleProjectIsActiveCall__Outputs {
  _call: ToggleProjectIsActiveCall;

  constructor(call: ToggleProjectIsActiveCall) {
    this._call = call;
  }
}

export class ToggleProjectIsLockedCall extends ethereum.Call {
  get inputs(): ToggleProjectIsLockedCall__Inputs {
    return new ToggleProjectIsLockedCall__Inputs(this);
  }

  get outputs(): ToggleProjectIsLockedCall__Outputs {
    return new ToggleProjectIsLockedCall__Outputs(this);
  }
}

export class ToggleProjectIsLockedCall__Inputs {
  _call: ToggleProjectIsLockedCall;

  constructor(call: ToggleProjectIsLockedCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleProjectIsLockedCall__Outputs {
  _call: ToggleProjectIsLockedCall;

  constructor(call: ToggleProjectIsLockedCall) {
    this._call = call;
  }
}

export class ToggleProjectIsPausedCall extends ethereum.Call {
  get inputs(): ToggleProjectIsPausedCall__Inputs {
    return new ToggleProjectIsPausedCall__Inputs(this);
  }

  get outputs(): ToggleProjectIsPausedCall__Outputs {
    return new ToggleProjectIsPausedCall__Outputs(this);
  }
}

export class ToggleProjectIsPausedCall__Inputs {
  _call: ToggleProjectIsPausedCall;

  constructor(call: ToggleProjectIsPausedCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleProjectIsPausedCall__Outputs {
  _call: ToggleProjectIsPausedCall;

  constructor(call: ToggleProjectIsPausedCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UpdateAdminCall extends ethereum.Call {
  get inputs(): UpdateAdminCall__Inputs {
    return new UpdateAdminCall__Inputs(this);
  }

  get outputs(): UpdateAdminCall__Outputs {
    return new UpdateAdminCall__Outputs(this);
  }
}

export class UpdateAdminCall__Inputs {
  _call: UpdateAdminCall;

  constructor(call: UpdateAdminCall) {
    this._call = call;
  }

  get _adminAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateAdminCall__Outputs {
  _call: UpdateAdminCall;

  constructor(call: UpdateAdminCall) {
    this._call = call;
  }
}

export class UpdateProjectAdditionalPayeeInfoCall extends ethereum.Call {
  get inputs(): UpdateProjectAdditionalPayeeInfoCall__Inputs {
    return new UpdateProjectAdditionalPayeeInfoCall__Inputs(this);
  }

  get outputs(): UpdateProjectAdditionalPayeeInfoCall__Outputs {
    return new UpdateProjectAdditionalPayeeInfoCall__Outputs(this);
  }
}

export class UpdateProjectAdditionalPayeeInfoCall__Inputs {
  _call: UpdateProjectAdditionalPayeeInfoCall;

  constructor(call: UpdateProjectAdditionalPayeeInfoCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _additionalPayee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _additionalPayeePercentage(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateProjectAdditionalPayeeInfoCall__Outputs {
  _call: UpdateProjectAdditionalPayeeInfoCall;

  constructor(call: UpdateProjectAdditionalPayeeInfoCall) {
    this._call = call;
  }
}

export class UpdateProjectArtistAddressCall extends ethereum.Call {
  get inputs(): UpdateProjectArtistAddressCall__Inputs {
    return new UpdateProjectArtistAddressCall__Inputs(this);
  }

  get outputs(): UpdateProjectArtistAddressCall__Outputs {
    return new UpdateProjectArtistAddressCall__Outputs(this);
  }
}

export class UpdateProjectArtistAddressCall__Inputs {
  _call: UpdateProjectArtistAddressCall;

  constructor(call: UpdateProjectArtistAddressCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _artistAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateProjectArtistAddressCall__Outputs {
  _call: UpdateProjectArtistAddressCall;

  constructor(call: UpdateProjectArtistAddressCall) {
    this._call = call;
  }
}

export class UpdateProjectArtistNameCall extends ethereum.Call {
  get inputs(): UpdateProjectArtistNameCall__Inputs {
    return new UpdateProjectArtistNameCall__Inputs(this);
  }

  get outputs(): UpdateProjectArtistNameCall__Outputs {
    return new UpdateProjectArtistNameCall__Outputs(this);
  }
}

export class UpdateProjectArtistNameCall__Inputs {
  _call: UpdateProjectArtistNameCall;

  constructor(call: UpdateProjectArtistNameCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectArtistName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectArtistNameCall__Outputs {
  _call: UpdateProjectArtistNameCall;

  constructor(call: UpdateProjectArtistNameCall) {
    this._call = call;
  }
}

export class UpdateProjectBaseURICall extends ethereum.Call {
  get inputs(): UpdateProjectBaseURICall__Inputs {
    return new UpdateProjectBaseURICall__Inputs(this);
  }

  get outputs(): UpdateProjectBaseURICall__Outputs {
    return new UpdateProjectBaseURICall__Outputs(this);
  }
}

export class UpdateProjectBaseURICall__Inputs {
  _call: UpdateProjectBaseURICall;

  constructor(call: UpdateProjectBaseURICall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newBaseURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectBaseURICall__Outputs {
  _call: UpdateProjectBaseURICall;

  constructor(call: UpdateProjectBaseURICall) {
    this._call = call;
  }
}

export class UpdateProjectCurrencyInfoCall extends ethereum.Call {
  get inputs(): UpdateProjectCurrencyInfoCall__Inputs {
    return new UpdateProjectCurrencyInfoCall__Inputs(this);
  }

  get outputs(): UpdateProjectCurrencyInfoCall__Outputs {
    return new UpdateProjectCurrencyInfoCall__Outputs(this);
  }
}

export class UpdateProjectCurrencyInfoCall__Inputs {
  _call: UpdateProjectCurrencyInfoCall;

  constructor(call: UpdateProjectCurrencyInfoCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _currencySymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateProjectCurrencyInfoCall__Outputs {
  _call: UpdateProjectCurrencyInfoCall;

  constructor(call: UpdateProjectCurrencyInfoCall) {
    this._call = call;
  }
}

export class UpdateProjectDescriptionCall extends ethereum.Call {
  get inputs(): UpdateProjectDescriptionCall__Inputs {
    return new UpdateProjectDescriptionCall__Inputs(this);
  }

  get outputs(): UpdateProjectDescriptionCall__Outputs {
    return new UpdateProjectDescriptionCall__Outputs(this);
  }
}

export class UpdateProjectDescriptionCall__Inputs {
  _call: UpdateProjectDescriptionCall;

  constructor(call: UpdateProjectDescriptionCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectDescription(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectDescriptionCall__Outputs {
  _call: UpdateProjectDescriptionCall;

  constructor(call: UpdateProjectDescriptionCall) {
    this._call = call;
  }
}

export class UpdateProjectExternalAssetDependencyCall extends ethereum.Call {
  get inputs(): UpdateProjectExternalAssetDependencyCall__Inputs {
    return new UpdateProjectExternalAssetDependencyCall__Inputs(this);
  }

  get outputs(): UpdateProjectExternalAssetDependencyCall__Outputs {
    return new UpdateProjectExternalAssetDependencyCall__Outputs(this);
  }
}

export class UpdateProjectExternalAssetDependencyCall__Inputs {
  _call: UpdateProjectExternalAssetDependencyCall;

  constructor(call: UpdateProjectExternalAssetDependencyCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _cid(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _dependencyType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class UpdateProjectExternalAssetDependencyCall__Outputs {
  _call: UpdateProjectExternalAssetDependencyCall;

  constructor(call: UpdateProjectExternalAssetDependencyCall) {
    this._call = call;
  }
}

export class UpdateProjectIpfsHashCall extends ethereum.Call {
  get inputs(): UpdateProjectIpfsHashCall__Inputs {
    return new UpdateProjectIpfsHashCall__Inputs(this);
  }

  get outputs(): UpdateProjectIpfsHashCall__Outputs {
    return new UpdateProjectIpfsHashCall__Outputs(this);
  }
}

export class UpdateProjectIpfsHashCall__Inputs {
  _call: UpdateProjectIpfsHashCall;

  constructor(call: UpdateProjectIpfsHashCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectIpfsHashCall__Outputs {
  _call: UpdateProjectIpfsHashCall;

  constructor(call: UpdateProjectIpfsHashCall) {
    this._call = call;
  }
}

export class UpdateProjectLicenseCall extends ethereum.Call {
  get inputs(): UpdateProjectLicenseCall__Inputs {
    return new UpdateProjectLicenseCall__Inputs(this);
  }

  get outputs(): UpdateProjectLicenseCall__Outputs {
    return new UpdateProjectLicenseCall__Outputs(this);
  }
}

export class UpdateProjectLicenseCall__Inputs {
  _call: UpdateProjectLicenseCall;

  constructor(call: UpdateProjectLicenseCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectLicense(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectLicenseCall__Outputs {
  _call: UpdateProjectLicenseCall;

  constructor(call: UpdateProjectLicenseCall) {
    this._call = call;
  }
}

export class UpdateProjectMaxInvocationsCall extends ethereum.Call {
  get inputs(): UpdateProjectMaxInvocationsCall__Inputs {
    return new UpdateProjectMaxInvocationsCall__Inputs(this);
  }

  get outputs(): UpdateProjectMaxInvocationsCall__Outputs {
    return new UpdateProjectMaxInvocationsCall__Outputs(this);
  }
}

export class UpdateProjectMaxInvocationsCall__Inputs {
  _call: UpdateProjectMaxInvocationsCall;

  constructor(call: UpdateProjectMaxInvocationsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxInvocations(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateProjectMaxInvocationsCall__Outputs {
  _call: UpdateProjectMaxInvocationsCall;

  constructor(call: UpdateProjectMaxInvocationsCall) {
    this._call = call;
  }
}

export class UpdateProjectNameCall extends ethereum.Call {
  get inputs(): UpdateProjectNameCall__Inputs {
    return new UpdateProjectNameCall__Inputs(this);
  }

  get outputs(): UpdateProjectNameCall__Outputs {
    return new UpdateProjectNameCall__Outputs(this);
  }
}

export class UpdateProjectNameCall__Inputs {
  _call: UpdateProjectNameCall;

  constructor(call: UpdateProjectNameCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectNameCall__Outputs {
  _call: UpdateProjectNameCall;

  constructor(call: UpdateProjectNameCall) {
    this._call = call;
  }
}

export class UpdateProjectPricePerTokenInWeiCall extends ethereum.Call {
  get inputs(): UpdateProjectPricePerTokenInWeiCall__Inputs {
    return new UpdateProjectPricePerTokenInWeiCall__Inputs(this);
  }

  get outputs(): UpdateProjectPricePerTokenInWeiCall__Outputs {
    return new UpdateProjectPricePerTokenInWeiCall__Outputs(this);
  }
}

export class UpdateProjectPricePerTokenInWeiCall__Inputs {
  _call: UpdateProjectPricePerTokenInWeiCall;

  constructor(call: UpdateProjectPricePerTokenInWeiCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _pricePerTokenInWei(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateProjectPricePerTokenInWeiCall__Outputs {
  _call: UpdateProjectPricePerTokenInWeiCall;

  constructor(call: UpdateProjectPricePerTokenInWeiCall) {
    this._call = call;
  }
}

export class UpdateProjectScriptCall extends ethereum.Call {
  get inputs(): UpdateProjectScriptCall__Inputs {
    return new UpdateProjectScriptCall__Inputs(this);
  }

  get outputs(): UpdateProjectScriptCall__Outputs {
    return new UpdateProjectScriptCall__Outputs(this);
  }
}

export class UpdateProjectScriptCall__Inputs {
  _call: UpdateProjectScriptCall;

  constructor(call: UpdateProjectScriptCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _scriptId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _script(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateProjectScriptCall__Outputs {
  _call: UpdateProjectScriptCall;

  constructor(call: UpdateProjectScriptCall) {
    this._call = call;
  }
}

export class UpdateProjectScriptJSONCall extends ethereum.Call {
  get inputs(): UpdateProjectScriptJSONCall__Inputs {
    return new UpdateProjectScriptJSONCall__Inputs(this);
  }

  get outputs(): UpdateProjectScriptJSONCall__Outputs {
    return new UpdateProjectScriptJSONCall__Outputs(this);
  }
}

export class UpdateProjectScriptJSONCall__Inputs {
  _call: UpdateProjectScriptJSONCall;

  constructor(call: UpdateProjectScriptJSONCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectScriptJSON(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectScriptJSONCall__Outputs {
  _call: UpdateProjectScriptJSONCall;

  constructor(call: UpdateProjectScriptJSONCall) {
    this._call = call;
  }
}

export class UpdateProjectSecondaryMarketRoyaltyPercentageCall extends ethereum.Call {
  get inputs(): UpdateProjectSecondaryMarketRoyaltyPercentageCall__Inputs {
    return new UpdateProjectSecondaryMarketRoyaltyPercentageCall__Inputs(this);
  }

  get outputs(): UpdateProjectSecondaryMarketRoyaltyPercentageCall__Outputs {
    return new UpdateProjectSecondaryMarketRoyaltyPercentageCall__Outputs(this);
  }
}

export class UpdateProjectSecondaryMarketRoyaltyPercentageCall__Inputs {
  _call: UpdateProjectSecondaryMarketRoyaltyPercentageCall;

  constructor(call: UpdateProjectSecondaryMarketRoyaltyPercentageCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _secondMarketRoyalty(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateProjectSecondaryMarketRoyaltyPercentageCall__Outputs {
  _call: UpdateProjectSecondaryMarketRoyaltyPercentageCall;

  constructor(call: UpdateProjectSecondaryMarketRoyaltyPercentageCall) {
    this._call = call;
  }
}

export class UpdateProjectWebsiteCall extends ethereum.Call {
  get inputs(): UpdateProjectWebsiteCall__Inputs {
    return new UpdateProjectWebsiteCall__Inputs(this);
  }

  get outputs(): UpdateProjectWebsiteCall__Outputs {
    return new UpdateProjectWebsiteCall__Outputs(this);
  }
}

export class UpdateProjectWebsiteCall__Inputs {
  _call: UpdateProjectWebsiteCall;

  constructor(call: UpdateProjectWebsiteCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _projectWebsite(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectWebsiteCall__Outputs {
  _call: UpdateProjectWebsiteCall;

  constructor(call: UpdateProjectWebsiteCall) {
    this._call = call;
  }
}

export class UpdateRandomizerAddressCall extends ethereum.Call {
  get inputs(): UpdateRandomizerAddressCall__Inputs {
    return new UpdateRandomizerAddressCall__Inputs(this);
  }

  get outputs(): UpdateRandomizerAddressCall__Outputs {
    return new UpdateRandomizerAddressCall__Outputs(this);
  }
}

export class UpdateRandomizerAddressCall__Inputs {
  _call: UpdateRandomizerAddressCall;

  constructor(call: UpdateRandomizerAddressCall) {
    this._call = call;
  }

  get _randomizerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateRandomizerAddressCall__Outputs {
  _call: UpdateRandomizerAddressCall;

  constructor(call: UpdateRandomizerAddressCall) {
    this._call = call;
  }
}

export class UpdateRenderProviderAddressCall extends ethereum.Call {
  get inputs(): UpdateRenderProviderAddressCall__Inputs {
    return new UpdateRenderProviderAddressCall__Inputs(this);
  }

  get outputs(): UpdateRenderProviderAddressCall__Outputs {
    return new UpdateRenderProviderAddressCall__Outputs(this);
  }
}

export class UpdateRenderProviderAddressCall__Inputs {
  _call: UpdateRenderProviderAddressCall;

  constructor(call: UpdateRenderProviderAddressCall) {
    this._call = call;
  }

  get _renderProviderAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateRenderProviderAddressCall__Outputs {
  _call: UpdateRenderProviderAddressCall;

  constructor(call: UpdateRenderProviderAddressCall) {
    this._call = call;
  }
}

export class UpdateRenderProviderPercentageCall extends ethereum.Call {
  get inputs(): UpdateRenderProviderPercentageCall__Inputs {
    return new UpdateRenderProviderPercentageCall__Inputs(this);
  }

  get outputs(): UpdateRenderProviderPercentageCall__Outputs {
    return new UpdateRenderProviderPercentageCall__Outputs(this);
  }
}

export class UpdateRenderProviderPercentageCall__Inputs {
  _call: UpdateRenderProviderPercentageCall;

  constructor(call: UpdateRenderProviderPercentageCall) {
    this._call = call;
  }

  get _renderProviderPercentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateRenderProviderPercentageCall__Outputs {
  _call: UpdateRenderProviderPercentageCall;

  constructor(call: UpdateRenderProviderPercentageCall) {
    this._call = call;
  }
}
