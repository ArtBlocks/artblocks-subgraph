// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MinterApproved extends ethereum.Event {
  get params(): MinterApproved__Params {
    return new MinterApproved__Params(this);
  }
}

export class MinterApproved__Params {
  _event: MinterApproved;

  constructor(event: MinterApproved) {
    this._event = event;
  }

  get _minterAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _minterType(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class MinterRevoked extends ethereum.Event {
  get params(): MinterRevoked__Params {
    return new MinterRevoked__Params(this);
  }
}

export class MinterRevoked__Params {
  _event: MinterRevoked;

  constructor(event: MinterRevoked) {
    this._event = event;
  }

  get _minterAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProjectMinterRegistered extends ethereum.Event {
  get params(): ProjectMinterRegistered__Params {
    return new ProjectMinterRegistered__Params(this);
  }
}

export class ProjectMinterRegistered__Params {
  _event: ProjectMinterRegistered;

  constructor(event: ProjectMinterRegistered) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _minterAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _minterType(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ProjectMinterRemoved extends ethereum.Event {
  get params(): ProjectMinterRemoved__Params {
    return new ProjectMinterRemoved__Params(this);
  }
}

export class ProjectMinterRemoved__Params {
  _event: ProjectMinterRemoved;

  constructor(event: ProjectMinterRemoved) {
    this._event = event;
  }

  get _projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class IMinterFilterV0 extends ethereum.SmartContract {
  static bind(address: Address): IMinterFilterV0 {
    return new IMinterFilterV0("IMinterFilterV0", address);
  }

  genArt721CoreAddress(): Address {
    let result = super.call(
      "genArt721CoreAddress",
      "genArt721CoreAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_genArt721CoreAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "genArt721CoreAddress",
      "genArt721CoreAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMinterForProject(param0: BigInt): Address {
    let result = super.call(
      "getMinterForProject",
      "getMinterForProject(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_getMinterForProject(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMinterForProject",
      "getMinterForProject(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mint(_to: Address, _projectId: BigInt, sender: Address): BigInt {
    let result = super.call("mint", "mint(address,uint256,address):(uint256)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_projectId),
      ethereum.Value.fromAddress(sender)
    ]);

    return result[0].toBigInt();
  }

  try_mint(
    _to: Address,
    _projectId: BigInt,
    sender: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mint",
      "mint(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromAddress(sender)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectHasMinter(param0: BigInt): boolean {
    let result = super.call(
      "projectHasMinter",
      "projectHasMinter(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_projectHasMinter(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "projectHasMinter",
      "projectHasMinter(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class GenArt721CoreAddressCall extends ethereum.Call {
  get inputs(): GenArt721CoreAddressCall__Inputs {
    return new GenArt721CoreAddressCall__Inputs(this);
  }

  get outputs(): GenArt721CoreAddressCall__Outputs {
    return new GenArt721CoreAddressCall__Outputs(this);
  }
}

export class GenArt721CoreAddressCall__Inputs {
  _call: GenArt721CoreAddressCall;

  constructor(call: GenArt721CoreAddressCall) {
    this._call = call;
  }
}

export class GenArt721CoreAddressCall__Outputs {
  _call: GenArt721CoreAddressCall;

  constructor(call: GenArt721CoreAddressCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _projectId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveMinterForProjectCall extends ethereum.Call {
  get inputs(): RemoveMinterForProjectCall__Inputs {
    return new RemoveMinterForProjectCall__Inputs(this);
  }

  get outputs(): RemoveMinterForProjectCall__Outputs {
    return new RemoveMinterForProjectCall__Outputs(this);
  }
}

export class RemoveMinterForProjectCall__Inputs {
  _call: RemoveMinterForProjectCall;

  constructor(call: RemoveMinterForProjectCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveMinterForProjectCall__Outputs {
  _call: RemoveMinterForProjectCall;

  constructor(call: RemoveMinterForProjectCall) {
    this._call = call;
  }
}

export class SetMinterForProjectCall extends ethereum.Call {
  get inputs(): SetMinterForProjectCall__Inputs {
    return new SetMinterForProjectCall__Inputs(this);
  }

  get outputs(): SetMinterForProjectCall__Outputs {
    return new SetMinterForProjectCall__Outputs(this);
  }
}

export class SetMinterForProjectCall__Inputs {
  _call: SetMinterForProjectCall;

  constructor(call: SetMinterForProjectCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetMinterForProjectCall__Outputs {
  _call: SetMinterForProjectCall;

  constructor(call: SetMinterForProjectCall) {
    this._call = call;
  }
}
