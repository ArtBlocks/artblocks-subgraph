// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CounterIncremented extends ethereum.Event {
  get params(): CounterIncremented__Params {
    return new CounterIncremented__Params(this);
  }
}

export class CounterIncremented__Params {
  _event: CounterIncremented;

  constructor(event: CounterIncremented) {
    this._event = event;
  }

  get newCounter(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get offerer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OrderCancelled extends ethereum.Event {
  get params(): OrderCancelled__Params {
    return new OrderCancelled__Params(this);
  }
}

export class OrderCancelled__Params {
  _event: OrderCancelled;

  constructor(event: OrderCancelled) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get offerer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get zone(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OrderFulfilled extends ethereum.Event {
  get params(): OrderFulfilled__Params {
    return new OrderFulfilled__Params(this);
  }
}

export class OrderFulfilled__Params {
  _event: OrderFulfilled;

  constructor(event: OrderFulfilled) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get offerer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get zone(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get offer(): Array<OrderFulfilledOfferStruct> {
    return this._event.parameters[4].value.toTupleArray<
      OrderFulfilledOfferStruct
    >();
  }

  get consideration(): Array<OrderFulfilledConsiderationStruct> {
    return this._event.parameters[5].value.toTupleArray<
      OrderFulfilledConsiderationStruct
    >();
  }
}

export class OrderFulfilledOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }
}

export class OrderFulfilledConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get recipient(): Address {
    return this[4].toAddress();
  }
}

export class OrderValidated extends ethereum.Event {
  get params(): OrderValidated__Params {
    return new OrderValidated__Params(this);
  }
}

export class OrderValidated__Params {
  _event: OrderValidated;

  constructor(event: OrderValidated) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get offerer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get zone(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SeaportExchange__cancelInputOrdersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<SeaportExchange__cancelInputOrdersOfferStruct> {
    return this[2].toTupleArray<
      SeaportExchange__cancelInputOrdersOfferStruct
    >();
  }

  get consideration(): Array<
    SeaportExchange__cancelInputOrdersConsiderationStruct
  > {
    return this[3].toTupleArray<
      SeaportExchange__cancelInputOrdersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get counter(): BigInt {
    return this[10].toBigInt();
  }
}

export class SeaportExchange__cancelInputOrdersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class SeaportExchange__cancelInputOrdersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class SeaportExchange__getOrderHashInputOrderStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<SeaportExchange__getOrderHashInputOrderOfferStruct> {
    return this[2].toTupleArray<
      SeaportExchange__getOrderHashInputOrderOfferStruct
    >();
  }

  get consideration(): Array<
    SeaportExchange__getOrderHashInputOrderConsiderationStruct
  > {
    return this[3].toTupleArray<
      SeaportExchange__getOrderHashInputOrderConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get counter(): BigInt {
    return this[10].toBigInt();
  }
}

export class SeaportExchange__getOrderHashInputOrderOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class SeaportExchange__getOrderHashInputOrderConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class SeaportExchange__getOrderStatusResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class SeaportExchange__informationResult {
  value0: string;
  value1: Bytes;
  value2: Address;

  constructor(value0: string, value1: Bytes, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }
}

export class SeaportExchange__validateInputOrdersStruct extends ethereum.Tuple {
  get parameters(): SeaportExchange__validateInputOrdersParametersStruct {
    return changetype<SeaportExchange__validateInputOrdersParametersStruct>(
      this[0].toTuple()
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class SeaportExchange__validateInputOrdersParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<
    SeaportExchange__validateInputOrdersParametersOfferStruct
  > {
    return this[2].toTupleArray<
      SeaportExchange__validateInputOrdersParametersOfferStruct
    >();
  }

  get consideration(): Array<
    SeaportExchange__validateInputOrdersParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      SeaportExchange__validateInputOrdersParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class SeaportExchange__validateInputOrdersParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class SeaportExchange__validateInputOrdersParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class SeaportExchange extends ethereum.SmartContract {
  static bind(address: Address): SeaportExchange {
    return new SeaportExchange("SeaportExchange", address);
  }

  cancel(orders: Array<SeaportExchange__cancelInputOrdersStruct>): boolean {
    let result = super.call(
      "cancel",
      "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[]):(bool)",
      [ethereum.Value.fromTupleArray(orders)]
    );

    return result[0].toBoolean();
  }

  try_cancel(
    orders: Array<SeaportExchange__cancelInputOrdersStruct>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "cancel",
      "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[]):(bool)",
      [ethereum.Value.fromTupleArray(orders)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCounter(offerer: Address): BigInt {
    let result = super.call("getCounter", "getCounter(address):(uint256)", [
      ethereum.Value.fromAddress(offerer)
    ]);

    return result[0].toBigInt();
  }

  try_getCounter(offerer: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCounter", "getCounter(address):(uint256)", [
      ethereum.Value.fromAddress(offerer)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderHash(order: SeaportExchange__getOrderHashInputOrderStruct): Bytes {
    let result = super.call(
      "getOrderHash",
      "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(order)]
    );

    return result[0].toBytes();
  }

  try_getOrderHash(
    order: SeaportExchange__getOrderHashInputOrderStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getOrderHash",
      "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(order)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getOrderStatus(orderHash: Bytes): SeaportExchange__getOrderStatusResult {
    let result = super.call(
      "getOrderStatus",
      "getOrderStatus(bytes32):(bool,bool,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(orderHash)]
    );

    return new SeaportExchange__getOrderStatusResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getOrderStatus(
    orderHash: Bytes
  ): ethereum.CallResult<SeaportExchange__getOrderStatusResult> {
    let result = super.tryCall(
      "getOrderStatus",
      "getOrderStatus(bytes32):(bool,bool,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(orderHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SeaportExchange__getOrderStatusResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  incrementCounter(): BigInt {
    let result = super.call(
      "incrementCounter",
      "incrementCounter():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_incrementCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "incrementCounter",
      "incrementCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  information(): SeaportExchange__informationResult {
    let result = super.call(
      "information",
      "information():(string,bytes32,address)",
      []
    );

    return new SeaportExchange__informationResult(
      result[0].toString(),
      result[1].toBytes(),
      result[2].toAddress()
    );
  }

  try_information(): ethereum.CallResult<SeaportExchange__informationResult> {
    let result = super.tryCall(
      "information",
      "information():(string,bytes32,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SeaportExchange__informationResult(
        value[0].toString(),
        value[1].toBytes(),
        value[2].toAddress()
      )
    );
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  validate(orders: Array<SeaportExchange__validateInputOrdersStruct>): boolean {
    let result = super.call(
      "validate",
      "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[]):(bool)",
      [ethereum.Value.fromTupleArray(orders)]
    );

    return result[0].toBoolean();
  }

  try_validate(
    orders: Array<SeaportExchange__validateInputOrdersStruct>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "validate",
      "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[]):(bool)",
      [ethereum.Value.fromTupleArray(orders)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get conduitController(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get orders(): Array<CancelCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      CancelCallOrdersStruct
    >();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get cancelled(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelCallOrdersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<CancelCallOrdersOfferStruct> {
    return this[2].toTupleArray<CancelCallOrdersOfferStruct>();
  }

  get consideration(): Array<CancelCallOrdersConsiderationStruct> {
    return this[3].toTupleArray<CancelCallOrdersConsiderationStruct>();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get counter(): BigInt {
    return this[10].toBigInt();
  }
}

export class CancelCallOrdersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class CancelCallOrdersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class FulfillAdvancedOrderCall extends ethereum.Call {
  get inputs(): FulfillAdvancedOrderCall__Inputs {
    return new FulfillAdvancedOrderCall__Inputs(this);
  }

  get outputs(): FulfillAdvancedOrderCall__Outputs {
    return new FulfillAdvancedOrderCall__Outputs(this);
  }
}

export class FulfillAdvancedOrderCall__Inputs {
  _call: FulfillAdvancedOrderCall;

  constructor(call: FulfillAdvancedOrderCall) {
    this._call = call;
  }

  get advancedOrder(): FulfillAdvancedOrderCallAdvancedOrderStruct {
    return changetype<FulfillAdvancedOrderCallAdvancedOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get criteriaResolvers(): Array<
    FulfillAdvancedOrderCallCriteriaResolversStruct
  > {
    return this._call.inputValues[1].value.toTupleArray<
      FulfillAdvancedOrderCallCriteriaResolversStruct
    >();
  }

  get fulfillerConduitKey(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get recipient(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class FulfillAdvancedOrderCall__Outputs {
  _call: FulfillAdvancedOrderCall;

  constructor(call: FulfillAdvancedOrderCall) {
    this._call = call;
  }

  get fulfilled(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FulfillAdvancedOrderCallAdvancedOrderStruct extends ethereum.Tuple {
  get parameters(): FulfillAdvancedOrderCallAdvancedOrderParametersStruct {
    return changetype<FulfillAdvancedOrderCallAdvancedOrderParametersStruct>(
      this[0].toTuple()
    );
  }

  get numerator(): BigInt {
    return this[1].toBigInt();
  }

  get denominator(): BigInt {
    return this[2].toBigInt();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get extraData(): Bytes {
    return this[4].toBytes();
  }
}

export class FulfillAdvancedOrderCallAdvancedOrderParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<
    FulfillAdvancedOrderCallAdvancedOrderParametersOfferStruct
  > {
    return this[2].toTupleArray<
      FulfillAdvancedOrderCallAdvancedOrderParametersOfferStruct
    >();
  }

  get consideration(): Array<
    FulfillAdvancedOrderCallAdvancedOrderParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      FulfillAdvancedOrderCallAdvancedOrderParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class FulfillAdvancedOrderCallAdvancedOrderParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class FulfillAdvancedOrderCallAdvancedOrderParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class FulfillAdvancedOrderCallCriteriaResolversStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get identifier(): BigInt {
    return this[3].toBigInt();
  }

  get criteriaProof(): Array<Bytes> {
    return this[4].toBytesArray();
  }
}

export class FulfillAvailableAdvancedOrdersCall extends ethereum.Call {
  get inputs(): FulfillAvailableAdvancedOrdersCall__Inputs {
    return new FulfillAvailableAdvancedOrdersCall__Inputs(this);
  }

  get outputs(): FulfillAvailableAdvancedOrdersCall__Outputs {
    return new FulfillAvailableAdvancedOrdersCall__Outputs(this);
  }
}

export class FulfillAvailableAdvancedOrdersCall__Inputs {
  _call: FulfillAvailableAdvancedOrdersCall;

  constructor(call: FulfillAvailableAdvancedOrdersCall) {
    this._call = call;
  }

  get advancedOrders(): Array<
    FulfillAvailableAdvancedOrdersCallAdvancedOrdersStruct
  > {
    return this._call.inputValues[0].value.toTupleArray<
      FulfillAvailableAdvancedOrdersCallAdvancedOrdersStruct
    >();
  }

  get criteriaResolvers(): Array<
    FulfillAvailableAdvancedOrdersCallCriteriaResolversStruct
  > {
    return this._call.inputValues[1].value.toTupleArray<
      FulfillAvailableAdvancedOrdersCallCriteriaResolversStruct
    >();
  }

  get offerFulfillments(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get considerationFulfillments(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get fulfillerConduitKey(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get recipient(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get maximumFulfilled(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class FulfillAvailableAdvancedOrdersCall__Outputs {
  _call: FulfillAvailableAdvancedOrdersCall;

  constructor(call: FulfillAvailableAdvancedOrdersCall) {
    this._call = call;
  }

  get availableOrders(): Array<boolean> {
    return this._call.outputValues[0].value.toBooleanArray();
  }

  get executions(): Array<FulfillAvailableAdvancedOrdersCallExecutionsStruct> {
    return this._call.outputValues[1].value.toTupleArray<
      FulfillAvailableAdvancedOrdersCallExecutionsStruct
    >();
  }
}

export class FulfillAvailableAdvancedOrdersCallAdvancedOrdersStruct extends ethereum.Tuple {
  get parameters(): FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersStruct {
    return changetype<
      FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersStruct
    >(this[0].toTuple());
  }

  get numerator(): BigInt {
    return this[1].toBigInt();
  }

  get denominator(): BigInt {
    return this[2].toBigInt();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get extraData(): Bytes {
    return this[4].toBytes();
  }
}

export class FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<
    FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersOfferStruct
  > {
    return this[2].toTupleArray<
      FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersOfferStruct
    >();
  }

  get consideration(): Array<
    FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class FulfillAvailableAdvancedOrdersCallAdvancedOrdersParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class FulfillAvailableAdvancedOrdersCallCriteriaResolversStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get identifier(): BigInt {
    return this[3].toBigInt();
  }

  get criteriaProof(): Array<Bytes> {
    return this[4].toBytesArray();
  }
}

export class FulfillAvailableAdvancedOrdersCallExecutionsStruct extends ethereum.Tuple {
  get item(): FulfillAvailableAdvancedOrdersCallExecutionsItemStruct {
    return changetype<FulfillAvailableAdvancedOrdersCallExecutionsItemStruct>(
      this[0].toTuple()
    );
  }

  get offerer(): Address {
    return this[1].toAddress();
  }

  get conduitKey(): Bytes {
    return this[2].toBytes();
  }
}

export class FulfillAvailableAdvancedOrdersCallExecutionsItemStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get recipient(): Address {
    return this[4].toAddress();
  }
}

export class FulfillAvailableOrdersCall extends ethereum.Call {
  get inputs(): FulfillAvailableOrdersCall__Inputs {
    return new FulfillAvailableOrdersCall__Inputs(this);
  }

  get outputs(): FulfillAvailableOrdersCall__Outputs {
    return new FulfillAvailableOrdersCall__Outputs(this);
  }
}

export class FulfillAvailableOrdersCall__Inputs {
  _call: FulfillAvailableOrdersCall;

  constructor(call: FulfillAvailableOrdersCall) {
    this._call = call;
  }

  get orders(): Array<FulfillAvailableOrdersCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      FulfillAvailableOrdersCallOrdersStruct
    >();
  }

  get offerFulfillments(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get considerationFulfillments(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get fulfillerConduitKey(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get maximumFulfilled(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class FulfillAvailableOrdersCall__Outputs {
  _call: FulfillAvailableOrdersCall;

  constructor(call: FulfillAvailableOrdersCall) {
    this._call = call;
  }

  get availableOrders(): Array<boolean> {
    return this._call.outputValues[0].value.toBooleanArray();
  }

  get executions(): Array<FulfillAvailableOrdersCallExecutionsStruct> {
    return this._call.outputValues[1].value.toTupleArray<
      FulfillAvailableOrdersCallExecutionsStruct
    >();
  }
}

export class FulfillAvailableOrdersCallOrdersStruct extends ethereum.Tuple {
  get parameters(): FulfillAvailableOrdersCallOrdersParametersStruct {
    return changetype<FulfillAvailableOrdersCallOrdersParametersStruct>(
      this[0].toTuple()
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class FulfillAvailableOrdersCallOrdersParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<FulfillAvailableOrdersCallOrdersParametersOfferStruct> {
    return this[2].toTupleArray<
      FulfillAvailableOrdersCallOrdersParametersOfferStruct
    >();
  }

  get consideration(): Array<
    FulfillAvailableOrdersCallOrdersParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      FulfillAvailableOrdersCallOrdersParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class FulfillAvailableOrdersCallOrdersParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class FulfillAvailableOrdersCallOrdersParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class FulfillAvailableOrdersCallExecutionsStruct extends ethereum.Tuple {
  get item(): FulfillAvailableOrdersCallExecutionsItemStruct {
    return changetype<FulfillAvailableOrdersCallExecutionsItemStruct>(
      this[0].toTuple()
    );
  }

  get offerer(): Address {
    return this[1].toAddress();
  }

  get conduitKey(): Bytes {
    return this[2].toBytes();
  }
}

export class FulfillAvailableOrdersCallExecutionsItemStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get recipient(): Address {
    return this[4].toAddress();
  }
}

export class FulfillBasicOrderCall extends ethereum.Call {
  get inputs(): FulfillBasicOrderCall__Inputs {
    return new FulfillBasicOrderCall__Inputs(this);
  }

  get outputs(): FulfillBasicOrderCall__Outputs {
    return new FulfillBasicOrderCall__Outputs(this);
  }
}

export class FulfillBasicOrderCall__Inputs {
  _call: FulfillBasicOrderCall;

  constructor(call: FulfillBasicOrderCall) {
    this._call = call;
  }

  get parameters(): FulfillBasicOrderCallParametersStruct {
    return changetype<FulfillBasicOrderCallParametersStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class FulfillBasicOrderCall__Outputs {
  _call: FulfillBasicOrderCall;

  constructor(call: FulfillBasicOrderCall) {
    this._call = call;
  }

  get fulfilled(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FulfillBasicOrderCallParametersStruct extends ethereum.Tuple {
  get considerationToken(): Address {
    return this[0].toAddress();
  }

  get considerationIdentifier(): BigInt {
    return this[1].toBigInt();
  }

  get considerationAmount(): BigInt {
    return this[2].toBigInt();
  }

  get offerer(): Address {
    return this[3].toAddress();
  }

  get zone(): Address {
    return this[4].toAddress();
  }

  get offerToken(): Address {
    return this[5].toAddress();
  }

  get offerIdentifier(): BigInt {
    return this[6].toBigInt();
  }

  get offerAmount(): BigInt {
    return this[7].toBigInt();
  }

  get basicOrderType(): i32 {
    return this[8].toI32();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[11].toBytes();
  }

  get salt(): BigInt {
    return this[12].toBigInt();
  }

  get offererConduitKey(): Bytes {
    return this[13].toBytes();
  }

  get fulfillerConduitKey(): Bytes {
    return this[14].toBytes();
  }

  get totalOriginalAdditionalRecipients(): BigInt {
    return this[15].toBigInt();
  }

  get additionalRecipients(): Array<
    FulfillBasicOrderCallParametersAdditionalRecipientsStruct
  > {
    return this[16].toTupleArray<
      FulfillBasicOrderCallParametersAdditionalRecipientsStruct
    >();
  }

  get signature(): Bytes {
    return this[17].toBytes();
  }
}

export class FulfillBasicOrderCallParametersAdditionalRecipientsStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class FulfillOrderCall extends ethereum.Call {
  get inputs(): FulfillOrderCall__Inputs {
    return new FulfillOrderCall__Inputs(this);
  }

  get outputs(): FulfillOrderCall__Outputs {
    return new FulfillOrderCall__Outputs(this);
  }
}

export class FulfillOrderCall__Inputs {
  _call: FulfillOrderCall;

  constructor(call: FulfillOrderCall) {
    this._call = call;
  }

  get order(): FulfillOrderCallOrderStruct {
    return changetype<FulfillOrderCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get fulfillerConduitKey(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FulfillOrderCall__Outputs {
  _call: FulfillOrderCall;

  constructor(call: FulfillOrderCall) {
    this._call = call;
  }

  get fulfilled(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FulfillOrderCallOrderStruct extends ethereum.Tuple {
  get parameters(): FulfillOrderCallOrderParametersStruct {
    return changetype<FulfillOrderCallOrderParametersStruct>(this[0].toTuple());
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class FulfillOrderCallOrderParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<FulfillOrderCallOrderParametersOfferStruct> {
    return this[2].toTupleArray<FulfillOrderCallOrderParametersOfferStruct>();
  }

  get consideration(): Array<
    FulfillOrderCallOrderParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      FulfillOrderCallOrderParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class FulfillOrderCallOrderParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class FulfillOrderCallOrderParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class IncrementCounterCall extends ethereum.Call {
  get inputs(): IncrementCounterCall__Inputs {
    return new IncrementCounterCall__Inputs(this);
  }

  get outputs(): IncrementCounterCall__Outputs {
    return new IncrementCounterCall__Outputs(this);
  }
}

export class IncrementCounterCall__Inputs {
  _call: IncrementCounterCall;

  constructor(call: IncrementCounterCall) {
    this._call = call;
  }
}

export class IncrementCounterCall__Outputs {
  _call: IncrementCounterCall;

  constructor(call: IncrementCounterCall) {
    this._call = call;
  }

  get newCounter(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MatchAdvancedOrdersCall extends ethereum.Call {
  get inputs(): MatchAdvancedOrdersCall__Inputs {
    return new MatchAdvancedOrdersCall__Inputs(this);
  }

  get outputs(): MatchAdvancedOrdersCall__Outputs {
    return new MatchAdvancedOrdersCall__Outputs(this);
  }
}

export class MatchAdvancedOrdersCall__Inputs {
  _call: MatchAdvancedOrdersCall;

  constructor(call: MatchAdvancedOrdersCall) {
    this._call = call;
  }

  get advancedOrders(): Array<MatchAdvancedOrdersCallAdvancedOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MatchAdvancedOrdersCallAdvancedOrdersStruct
    >();
  }

  get criteriaResolvers(): Array<
    MatchAdvancedOrdersCallCriteriaResolversStruct
  > {
    return this._call.inputValues[1].value.toTupleArray<
      MatchAdvancedOrdersCallCriteriaResolversStruct
    >();
  }

  get fulfillments(): Array<MatchAdvancedOrdersCallFulfillmentsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      MatchAdvancedOrdersCallFulfillmentsStruct
    >();
  }
}

export class MatchAdvancedOrdersCall__Outputs {
  _call: MatchAdvancedOrdersCall;

  constructor(call: MatchAdvancedOrdersCall) {
    this._call = call;
  }

  get executions(): Array<MatchAdvancedOrdersCallExecutionsStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      MatchAdvancedOrdersCallExecutionsStruct
    >();
  }
}

export class MatchAdvancedOrdersCallAdvancedOrdersStruct extends ethereum.Tuple {
  get parameters(): MatchAdvancedOrdersCallAdvancedOrdersParametersStruct {
    return changetype<MatchAdvancedOrdersCallAdvancedOrdersParametersStruct>(
      this[0].toTuple()
    );
  }

  get numerator(): BigInt {
    return this[1].toBigInt();
  }

  get denominator(): BigInt {
    return this[2].toBigInt();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get extraData(): Bytes {
    return this[4].toBytes();
  }
}

export class MatchAdvancedOrdersCallAdvancedOrdersParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<
    MatchAdvancedOrdersCallAdvancedOrdersParametersOfferStruct
  > {
    return this[2].toTupleArray<
      MatchAdvancedOrdersCallAdvancedOrdersParametersOfferStruct
    >();
  }

  get consideration(): Array<
    MatchAdvancedOrdersCallAdvancedOrdersParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      MatchAdvancedOrdersCallAdvancedOrdersParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class MatchAdvancedOrdersCallAdvancedOrdersParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class MatchAdvancedOrdersCallAdvancedOrdersParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class MatchAdvancedOrdersCallCriteriaResolversStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get identifier(): BigInt {
    return this[3].toBigInt();
  }

  get criteriaProof(): Array<Bytes> {
    return this[4].toBytesArray();
  }
}

export class MatchAdvancedOrdersCallFulfillmentsStruct extends ethereum.Tuple {
  get offerComponents(): Array<
    MatchAdvancedOrdersCallFulfillmentsOfferComponentsStruct
  > {
    return this[0].toTupleArray<
      MatchAdvancedOrdersCallFulfillmentsOfferComponentsStruct
    >();
  }

  get considerationComponents(): Array<
    MatchAdvancedOrdersCallFulfillmentsConsiderationComponentsStruct
  > {
    return this[1].toTupleArray<
      MatchAdvancedOrdersCallFulfillmentsConsiderationComponentsStruct
    >();
  }
}

export class MatchAdvancedOrdersCallFulfillmentsOfferComponentsStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get itemIndex(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchAdvancedOrdersCallFulfillmentsConsiderationComponentsStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get itemIndex(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchAdvancedOrdersCallExecutionsStruct extends ethereum.Tuple {
  get item(): MatchAdvancedOrdersCallExecutionsItemStruct {
    return changetype<MatchAdvancedOrdersCallExecutionsItemStruct>(
      this[0].toTuple()
    );
  }

  get offerer(): Address {
    return this[1].toAddress();
  }

  get conduitKey(): Bytes {
    return this[2].toBytes();
  }
}

export class MatchAdvancedOrdersCallExecutionsItemStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get recipient(): Address {
    return this[4].toAddress();
  }
}

export class MatchOrdersCall extends ethereum.Call {
  get inputs(): MatchOrdersCall__Inputs {
    return new MatchOrdersCall__Inputs(this);
  }

  get outputs(): MatchOrdersCall__Outputs {
    return new MatchOrdersCall__Outputs(this);
  }
}

export class MatchOrdersCall__Inputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get orders(): Array<MatchOrdersCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MatchOrdersCallOrdersStruct
    >();
  }

  get fulfillments(): Array<MatchOrdersCallFulfillmentsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      MatchOrdersCallFulfillmentsStruct
    >();
  }
}

export class MatchOrdersCall__Outputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get executions(): Array<MatchOrdersCallExecutionsStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      MatchOrdersCallExecutionsStruct
    >();
  }
}

export class MatchOrdersCallOrdersStruct extends ethereum.Tuple {
  get parameters(): MatchOrdersCallOrdersParametersStruct {
    return changetype<MatchOrdersCallOrdersParametersStruct>(this[0].toTuple());
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class MatchOrdersCallOrdersParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<MatchOrdersCallOrdersParametersOfferStruct> {
    return this[2].toTupleArray<MatchOrdersCallOrdersParametersOfferStruct>();
  }

  get consideration(): Array<
    MatchOrdersCallOrdersParametersConsiderationStruct
  > {
    return this[3].toTupleArray<
      MatchOrdersCallOrdersParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class MatchOrdersCallOrdersParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class MatchOrdersCallOrdersParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}

export class MatchOrdersCallFulfillmentsStruct extends ethereum.Tuple {
  get offerComponents(): Array<
    MatchOrdersCallFulfillmentsOfferComponentsStruct
  > {
    return this[0].toTupleArray<
      MatchOrdersCallFulfillmentsOfferComponentsStruct
    >();
  }

  get considerationComponents(): Array<
    MatchOrdersCallFulfillmentsConsiderationComponentsStruct
  > {
    return this[1].toTupleArray<
      MatchOrdersCallFulfillmentsConsiderationComponentsStruct
    >();
  }
}

export class MatchOrdersCallFulfillmentsOfferComponentsStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get itemIndex(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchOrdersCallFulfillmentsConsiderationComponentsStruct extends ethereum.Tuple {
  get orderIndex(): BigInt {
    return this[0].toBigInt();
  }

  get itemIndex(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchOrdersCallExecutionsStruct extends ethereum.Tuple {
  get item(): MatchOrdersCallExecutionsItemStruct {
    return changetype<MatchOrdersCallExecutionsItemStruct>(this[0].toTuple());
  }

  get offerer(): Address {
    return this[1].toAddress();
  }

  get conduitKey(): Bytes {
    return this[2].toBytes();
  }
}

export class MatchOrdersCallExecutionsItemStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get recipient(): Address {
    return this[4].toAddress();
  }
}

export class ValidateCall extends ethereum.Call {
  get inputs(): ValidateCall__Inputs {
    return new ValidateCall__Inputs(this);
  }

  get outputs(): ValidateCall__Outputs {
    return new ValidateCall__Outputs(this);
  }
}

export class ValidateCall__Inputs {
  _call: ValidateCall;

  constructor(call: ValidateCall) {
    this._call = call;
  }

  get orders(): Array<ValidateCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      ValidateCallOrdersStruct
    >();
  }
}

export class ValidateCall__Outputs {
  _call: ValidateCall;

  constructor(call: ValidateCall) {
    this._call = call;
  }

  get validated(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ValidateCallOrdersStruct extends ethereum.Tuple {
  get parameters(): ValidateCallOrdersParametersStruct {
    return changetype<ValidateCallOrdersParametersStruct>(this[0].toTuple());
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class ValidateCallOrdersParametersStruct extends ethereum.Tuple {
  get offerer(): Address {
    return this[0].toAddress();
  }

  get zone(): Address {
    return this[1].toAddress();
  }

  get offer(): Array<ValidateCallOrdersParametersOfferStruct> {
    return this[2].toTupleArray<ValidateCallOrdersParametersOfferStruct>();
  }

  get consideration(): Array<ValidateCallOrdersParametersConsiderationStruct> {
    return this[3].toTupleArray<
      ValidateCallOrdersParametersConsiderationStruct
    >();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get endTime(): BigInt {
    return this[6].toBigInt();
  }

  get zoneHash(): Bytes {
    return this[7].toBytes();
  }

  get salt(): BigInt {
    return this[8].toBigInt();
  }

  get conduitKey(): Bytes {
    return this[9].toBytes();
  }

  get totalOriginalConsiderationItems(): BigInt {
    return this[10].toBigInt();
  }
}

export class ValidateCallOrdersParametersOfferStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class ValidateCallOrdersParametersConsiderationStruct extends ethereum.Tuple {
  get itemType(): i32 {
    return this[0].toI32();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get identifierOrCriteria(): BigInt {
    return this[2].toBigInt();
  }

  get startAmount(): BigInt {
    return this[3].toBigInt();
  }

  get endAmount(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }
}
