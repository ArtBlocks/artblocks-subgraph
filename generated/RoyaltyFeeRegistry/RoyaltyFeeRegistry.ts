// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewRoyaltyFeeLimit extends ethereum.Event {
  get params(): NewRoyaltyFeeLimit__Params {
    return new NewRoyaltyFeeLimit__Params(this);
  }
}

export class NewRoyaltyFeeLimit__Params {
  _event: NewRoyaltyFeeLimit;

  constructor(event: NewRoyaltyFeeLimit) {
    this._event = event;
  }

  get royaltyFeeLimit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoyaltyFeeUpdate extends ethereum.Event {
  get params(): RoyaltyFeeUpdate__Params {
    return new RoyaltyFeeUpdate__Params(this);
  }
}

export class RoyaltyFeeUpdate__Params {
  _event: RoyaltyFeeUpdate;

  constructor(event: RoyaltyFeeUpdate) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get setter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RoyaltyFeeRegistry__royaltyFeeInfoCollectionResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class RoyaltyFeeRegistry__royaltyInfoResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class RoyaltyFeeRegistry extends ethereum.SmartContract {
  static bind(address: Address): RoyaltyFeeRegistry {
    return new RoyaltyFeeRegistry("RoyaltyFeeRegistry", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyFeeInfoCollection(
    collection: Address
  ): RoyaltyFeeRegistry__royaltyFeeInfoCollectionResult {
    let result = super.call(
      "royaltyFeeInfoCollection",
      "royaltyFeeInfoCollection(address):(address,address,uint256)",
      [ethereum.Value.fromAddress(collection)]
    );

    return new RoyaltyFeeRegistry__royaltyFeeInfoCollectionResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_royaltyFeeInfoCollection(
    collection: Address
  ): ethereum.CallResult<RoyaltyFeeRegistry__royaltyFeeInfoCollectionResult> {
    let result = super.tryCall(
      "royaltyFeeInfoCollection",
      "royaltyFeeInfoCollection(address):(address,address,uint256)",
      [ethereum.Value.fromAddress(collection)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RoyaltyFeeRegistry__royaltyFeeInfoCollectionResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  royaltyFeeLimit(): BigInt {
    let result = super.call(
      "royaltyFeeLimit",
      "royaltyFeeLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_royaltyFeeLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "royaltyFeeLimit",
      "royaltyFeeLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  royaltyInfo(
    collection: Address,
    amount: BigInt
  ): RoyaltyFeeRegistry__royaltyInfoResult {
    let result = super.call(
      "royaltyInfo",
      "royaltyInfo(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(collection),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return new RoyaltyFeeRegistry__royaltyInfoResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royaltyInfo(
    collection: Address,
    amount: BigInt
  ): ethereum.CallResult<RoyaltyFeeRegistry__royaltyInfoResult> {
    let result = super.tryCall(
      "royaltyInfo",
      "royaltyInfo(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(collection),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RoyaltyFeeRegistry__royaltyInfoResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _royaltyFeeLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateRoyaltyFeeLimitCall extends ethereum.Call {
  get inputs(): UpdateRoyaltyFeeLimitCall__Inputs {
    return new UpdateRoyaltyFeeLimitCall__Inputs(this);
  }

  get outputs(): UpdateRoyaltyFeeLimitCall__Outputs {
    return new UpdateRoyaltyFeeLimitCall__Outputs(this);
  }
}

export class UpdateRoyaltyFeeLimitCall__Inputs {
  _call: UpdateRoyaltyFeeLimitCall;

  constructor(call: UpdateRoyaltyFeeLimitCall) {
    this._call = call;
  }

  get _royaltyFeeLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateRoyaltyFeeLimitCall__Outputs {
  _call: UpdateRoyaltyFeeLimitCall;

  constructor(call: UpdateRoyaltyFeeLimitCall) {
    this._call = call;
  }
}

export class UpdateRoyaltyInfoForCollectionCall extends ethereum.Call {
  get inputs(): UpdateRoyaltyInfoForCollectionCall__Inputs {
    return new UpdateRoyaltyInfoForCollectionCall__Inputs(this);
  }

  get outputs(): UpdateRoyaltyInfoForCollectionCall__Outputs {
    return new UpdateRoyaltyInfoForCollectionCall__Outputs(this);
  }
}

export class UpdateRoyaltyInfoForCollectionCall__Inputs {
  _call: UpdateRoyaltyInfoForCollectionCall;

  constructor(call: UpdateRoyaltyInfoForCollectionCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get setter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class UpdateRoyaltyInfoForCollectionCall__Outputs {
  _call: UpdateRoyaltyInfoForCollectionCall;

  constructor(call: UpdateRoyaltyInfoForCollectionCall) {
    this._call = call;
  }
}
